openapi: 3.0.1
info:
  title: Liberty REST API
  description: A RESTful API for integration with Axos Advisor Service's Liberty application.
  contact: {}
  license:
    name: ""
  version: v1
servers:
- url: //qa.axosadvisorservices.com/liberty
tags:
- name: Account API
  description: Retrieve Accounts
- name: Account Assets in Transfer API
  description: Retrieves the detailed assets in transfer for an account
- name: Account Authorizations API
  description: Account Authorizations Controller
- name: Account Balance API
  description: Retrieve account balance information
- name: Account Beneficial Owners API
  description: Retrieve Beneficial Owner(s) information for a specified account
- name: Account Beneficiaries API
  description: Account Beneficiaries
- name: Account Control Person API
  description: Retrieve Control Person information for a specified account
- name: Account Delivery Options API
  description: Account Delivery Options Controller
- name: Account Firm Contacts API
  description: Account Firm Contacts Controller
- name: Account Form API
  description: Retrieve PDF form information for a specified account
- name: Account Maintenance API
  description: Account maintenance operations on an account
- name: Account Pending Transactions API
  description: Pending Transactions on an account
- name: Account Performance API
  description: Retrieve performance information
- name: Account Positions API
  description: Account Positions
- name: Account Resource API
  description: Account Resource Controller
- name: Account Rmd API
  description: Account Rmd Controller
- name: Account Statements API
  description: Retrieve statement data for a specified account
- name: Account Tax Form API
  description: Retrieve tax form information for a specified account
- name: Account Transactions API
  description: Returns the transactions for an account
- name: Account Trusted Contact Person API
  description: Returns the trusted contact person for an account
- name: Account Type API
  description: Retrieve aaccount types that are available for selection
- name: Analytics Summary API
  description: Analytics Summary
- name: Beneficiary API
  description: Get a list of beneficiaries for the authenticated user.
- name: Beneficiary Maintenance API
  description: Create or update existing beneficiaries.
- name: Bulletins API
  description: Get a list of Bulletins for the authenticated user.
- name: Contribution API
  description: Contribution related operations.
- name: Distribution API
  description: Distribution related operations.
- name: Docusign API
  description: DocuSign Operations
- name: Electronic Signature Envelope Search API
  description: Search for user envelopes
- name: Electronic Signature Envelope Send API
  description: Create a new DocuSign envelope
- name: Electronic Signature Settings API
  description: Retrieve eSignature Settings
- name: Employer API
  description: Find Employers for the RIA
- name: Fee Family API
  description: Find Fee Families and Schedules
- name: Firm API
  description: Find Firms
- name: Interested Party API
  description: Interested Party Controller
- name: Model Allocation API
  description: The associated securities for a model
- name: One-Time Contributions API
  description: Create/Retrieve One-Time Contributions that are not sent to HOST.
- name: People Organization API
  description: People Organization
- name: Representative Maintenance API
  description: Representative Maintenance
- name: Representatives API
  description: Representative
- name: Ria Model API
  description: Retrieve model information
- name: Salesforce Case API
  description: Salesforce Case Controller
- name: Statement Family API
  description: Retrieve statement family data for a specified account.
- name: agg-investor-controller
  description: Agg Investor Controller
paths:
  /rest/account/v1/account/{accountNumber}:
    get:
      tags:
      - Account API
      summary: Account Lookup
      description: Retrieve detailed information that pertains to the account specified.
      operationId: doAccountLookup_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBasicDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/accountAuthorizations/{accountNumber}:
    get:
      tags:
      - Account Authorizations API
      summary: viewAccountAuthorizations
      operationId: viewAccountAuthorizationsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAuthorizationsResponseDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/accountBalances/{accountNumber}:
    get:
      tags:
      - Account Balance API
      summary: Account Balances
      description: Retrieve balance that pertains to the account number specified.
      operationId: viewAccountBalanceUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/accountSummaries:
    get:
      tags:
      - Account API
      summary: Account Summaries
      description: Retrieve a list of account summaries.
      operationId: retrieveAccountSummariesUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSummariesResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/accountTWR/{accountNumber}:
    get:
      tags:
      - Account Performance API
      summary: Account TWR
      description: Retrieve account TWR for an optional date period.
      operationId: viewAccountTWRUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: fromDate
        in: query
        description: fromDate
        schema:
          type: string
      - name: toDate
        in: query
        description: toDate
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalReturnSummaryDigestsRest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/accountowners/edit/{accountNumber}:
    put:
      tags:
      - Account API
      summary: Edit Account Owners
      description: Edit Account owners based on account number
      operationId: updateAccountOwnersUsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountOwner'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBasicDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param2
  /rest/account/v1/accounts:
    get:
      tags:
      - Account API
      summary: Account Search
      description: "The account search API will retrieve accounts meeting search criteria\
        \ provided. If no search criteria is provided, all accounts associated with\
        \ the authenticated user's advisor's id and the their user type will be returned.\
        \ A search may be performed for a specific account."
      operationId: doAccountSearch_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: orderByDateCreatedFrom
        in: query
        description: orderByDateCreatedFrom
        schema:
          type: string
      - name: representativeId
        in: query
        description: representativeId
        schema:
          type: integer
          format: int32
      - name: search
        in: query
        description: search
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/assetsInTransfer/{accountNumber}:
    get:
      tags:
      - Account Assets in Transfer API
      summary: Assets in Transfer
      description: Retrieves the detailed assets in transfer for an account
      operationId: viewAssetsInTransfer_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAssetsInTransferResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      - x-tc-api_key: []
  /rest/account/v1/beneficialOwners/{accountNumber}:
    get:
      tags:
      - Account Beneficial Owners API
      summary: Get Beneficial Owners for Account
      description: Retrieve beneficial owners for an account.
      operationId: getBeneficialOwnersByAccountUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBeneficialOwnersRestDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/beneficiariesByAccount/{accountNumber}:
    get:
      tags:
      - Account Beneficiaries API
      summary: View Beneficiaries by Account
      description: The account beneficiaries api returns the current beneficiaries
        for an account.
      operationId: viewBeneficiariesByAccount_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBeneficiariesResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/contribution/create:
    post:
      tags:
      - Contribution API
      summary: Create a contribution
      description: Provide a request to create a new contribution
      operationId: createContributionUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param0
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributionDigestRest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionResponseResultDigest'
        "201":
          description: Created Contribution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionResponseResultDigest'
        "400":
          description: Bad Request Parameters
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param0
  /rest/account/v1/contribution/edit:
    post:
      tags:
      - Contribution API
      summary: Edit a contribution
      description: Provide a request to edit a contribution
      operationId: editContributionUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param0
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributionDigestRest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionResponseResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param0
  /rest/account/v1/contribution/suspend:
    put:
      tags:
      - Contribution API
      summary: Suspend a contribution
      description: Initiate a request to suspend a contribution
      operationId: suspendContributionUsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param0
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributionSuspendRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionResponseResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param0
  /rest/account/v1/contributions/{accountId}:
    get:
      tags:
      - Contribution API
      summary: Get a list of account contributions
      description: You must be associated to the account
      operationId: getContributionsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionResponseResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/controlPerson/{accountNumber}:
    get:
      tags:
      - Account Control Person API
      summary: Get Control Person for Account
      description: Retrieve control person tied to account
      operationId: getControlPersonByAccountUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountControlPersonDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/create:
    post:
      tags:
      - Account Maintenance API
      summary: Create Account
      description: Create a new account in Advisor Services with the information provided.
        The account will be created with a status of pending.
      operationId: generateAccount_v1UsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGenerationDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGenerationDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/account/v1/deliveryOptions:
    put:
      tags:
      - Account Delivery Options API
      summary: updateDeliveryOptionsForAccount
      operationId: updateDeliveryOptionsForAccountUsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDeliveryOptionsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/account/v1/deliveryOptions/{accountNumber}:
    get:
      tags:
      - Account Delivery Options API
      summary: retrieveDeliveryOptionsForAccount
      operationId: retrieveDeliveryOptionsForAccountUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDeliveryOptionsResponseDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/distributions/{accountId}:
    get:
      tags:
      - Distribution API
      summary: Get a list of account distributions
      description: List all Systematic Distributions tied to the account
      operationId: getDistributionsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributionResponseResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/edit/beneficialOwners/{accountNumber}:
    post:
      tags:
      - Account Beneficial Owners API
      summary: Update Beneficial Owners for Account
      description: Update Beneficial Owners for existing Advisor Services Account.
      operationId: updateBeneficialOwnersUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBeneficialOwnersRestDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param2
  /rest/account/v1/edit/beneficiaries/{accountNumber}:
    post:
      tags:
      - Account Maintenance API
      summary: Update Account Beneficiaries
      description: "For an existing Advisor Services Account, the beneficiaries can\
        \ be added or removed.  To Remove beneficiaries from an account, simply send\
        \ an empty array to the entry point."
      operationId: updateAccountBeneficiary_v1UsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGenerationDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMaintenanceUpdateResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param2
  /rest/account/v1/edit/controlPerson/{accountNumber}:
    post:
      tags:
      - Account Control Person API
      summary: Update Control Person
      description: Update Control Person for existing Advisor Services Account.
      operationId: updateControlPersonUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountControlPersonDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param2
  /rest/account/v1/edit/fees/{accountNumber}:
    post:
      tags:
      - Account Maintenance API
      summary: Update Fees
      description: "For an existing Advisor Services Account, the fees can be added\
        \ or removed.  To Remove fees from an account, simply send an empty array\
        \ to the entry point."
      operationId: updateAccountFee_v1UsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGenerationDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMaintenanceUpdateResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param2
  /rest/account/v1/edit/models/{accountNumber}:
    post:
      tags:
      - Account Maintenance API
      summary: Update Account Model
      description: "For an existing Advisor Services Account, the models can be added\
        \ or updated."
      operationId: updateAccountModel_v1UsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGenerationDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMaintenanceUpdateResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param2
  /rest/account/v1/edit/representatives/{accountNumber}:
    post:
      tags:
      - Account Maintenance API
      summary: Update Account Representatives
      description: "For an existing Advisor Services Account, the representatives\
        \ can be added, updated or removed.  To remove representatives, send an empty\
        \ array of representatives."
      operationId: updateAccountRepresentative_v1UsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGenerationDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMaintenanceUpdateResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param2
  /rest/account/v1/edit/{accountNumber}:
    post:
      tags:
      - Account Maintenance API
      summary: Update Account
      description: Update an account in Advisor Services with the information provided.
      operationId: updateAccount_v1UsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGenerationDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGenerationDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param2
  /rest/account/v1/firmContacts/{accountNumber}:
    get:
      tags:
      - Account Firm Contacts API
      summary: viewFirmContactsByAccount
      operationId: viewFirmContactsByAccountUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFirmContactsResponseDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/form/{accountNumber}/{formCode}:
    get:
      tags:
      - Account Form API
      summary: Retrieve Populated Form
      description: Retrieves a populated pdf as a binary array
      operationId: getPopulatedFormUsingGET_1
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: formCode
        in: path
        description: formCode
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTaxFormDocumentResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/form/{accountNumber}/{formCode}/{actionId}:
    get:
      tags:
      - Account Form API
      summary: Retrieve Populated Form By Action ID
      description: Retrieves a populated pdf as a binary array
      operationId: getPopulatedFormUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: actionId
        in: path
        description: actionId
        required: true
        schema:
          type: integer
          format: int32
      - name: formCode
        in: path
        description: formCode
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTaxFormDocumentResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/forms/{accountNumber}:
    get:
      tags:
      - Account Form API
      summary: Get PDF Forms By Account
      description: Returns a list of all available pdf forms
      operationId: getTaxFormsByAccountUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFormsResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/interestedParty/disassociate:
    put:
      tags:
      - Interested Party API
      summary: disassocateInterestedParty
      operationId: disassocateInterestedPartyUsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterestedPartyId'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInterestedPartyResponseDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/account/v1/interestedParty/{accountNumber}:
    get:
      tags:
      - Interested Party API
      summary: viewInterestedPartyByAccount_v1
      operationId: viewInterestedPartyByAccount_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInterestedPartyResponseDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/monthlyAccountTWR/{accountNumber}:
    get:
      tags:
      - Account Performance API
      summary: Monthly Account TWR
      description: Retrieve monthly account TWRs for the life of an account.
      operationId: viewMonthlyAccountTWRUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalReturnItemDigestsRest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/pendingTransactions/{accountNumber}:
    get:
      tags:
      - Account Pending Transactions API
      summary: View Pending Transactions
      description: The account pending transactions api returns the transactions that
        are currently pending for the account.
      operationId: viewPendingTransactions_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPendingTransactionResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/positions/{accountNumber}:
    get:
      tags:
      - Account Positions API
      summary: View Positions Detail
      description: The account positions api returns the current positions for an
        account.
      operationId: viewPositionsDetail_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: asOfDate
        in: query
        description: asOfDate
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPositionDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/positionsByStatementFamily/{statementFamilyId}:
    get:
      tags:
      - Account Positions API
      summary: Retrieve Account Positions by Statement Family Id
      description: Return all accounts and the positons within the account attached
        to a statement family.
      operationId: viewPositionsByStatementFamilyId_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: statementFamilyId
        in: path
        description: statementFamilyId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementFamilyPositionsDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/resource/{accountNumber}/{key}:
    get:
      tags:
      - Account Resource API
      summary: retrieveResource
      operationId: retrieveResourceUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: integer
          format: int32
      - name: key
        in: path
        description: key
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/rmd/{accountNumber}:
    get:
      tags:
      - Account Rmd API
      summary: retrieveRmdSummary
      operationId: retrieveRmdSummaryUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRmdSummaryDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/statement/{accountNumber}/{statementdate}:
    get:
      tags:
      - Account Statements API
      summary: Retrieve Statement
      description: Retrieves a requested statement pdf within a AccountStatementDocumentResultDigest
        class object containing a binary data field.
      operationId: retrieveStatementUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: statementdate
        in: path
        description: statementdate
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Statement data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatementDocumentResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Statement could not be found
          content: {}
      deprecated: false
      security:
      - basic: []
      - basicAuth: []
  /rest/account/v1/statementFamilies/{statementFamilyId}/accountPositions:
    get:
      tags:
      - Account Positions API
      summary: Retrieve Account Positions by Statement Family Id
      description: Return all accounts and the positons within the account attached
        to a statement family.
      operationId: retrieveStatementFamilyPositions_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: custodyManagement
        in: query
        description: custodyManagement
        schema:
          type: string
      - name: statementFamilyId
        in: path
        description: statementFamilyId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementFamilyAccountPositionsDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/statementFamily/search/{statementFamilyName}:
    get:
      tags:
      - Statement Family API
      summary: Search Statement Families
      description: Searches for statement families matching search term
      operationId: searchStatementFamiliesUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: statementFamilyName
        in: path
        description: statementFamilyName
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementFamilyResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/statementFamily/{statementFamilyId}:
    get:
      tags:
      - Statement Family API
      summary: Get Statement Family Details
      description: Retrieves statement family info
      operationId: getStatementFamilyDetailsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: statementFamilyId
        in: path
        description: statementFamilyId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementFamilyResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/statements/{accountNumber}:
    get:
      tags:
      - Account Statements API
      summary: Get Statements By Account
      description: 'Retrieves all of the available statements as a json AccountStatementsResultDigest
        class object. '
      operationId: getStatementsByAccountUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Statements returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatementsResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: No statements found for the specific account
          content: {}
      deprecated: false
      security:
      - basic: []
      - basicAuth: []
  /rest/account/v1/taxform/{accountNumber}/{formType}/{taxYear}/{hostKey}:
    get:
      tags:
      - Account Tax Form API
      summary: Retrieve Tax Form
      description: Retrieves a tax form file pdf as binary array
      operationId: retrieveTaxFormUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: formType
        in: path
        description: formType
        required: true
        schema:
          type: string
      - name: hostKey
        in: path
        description: hostKey
        required: true
        schema:
          type: string
      - name: taxYear
        in: path
        description: taxYear
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTaxFormDocumentResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/taxforms/{accountNumber}:
    get:
      tags:
      - Account Tax Form API
      summary: Get Tax Forms By Account
      description: Returns a list of all available pdf tax forms
      operationId: getTaxFormsByAccountUsingGET_1
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTaxFormsResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/transactions/{accountNumber}:
    get:
      tags:
      - Account Transactions API
      summary: View Transactions
      description: Retrieve the transactions for a specific account
      operationId: viewTransactions_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransactionDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/transactions/{accountNumber}/fromDate/{fromDate}/throughDate/{throughDate}:
    get:
      tags:
      - Account Transactions API
      summary: View Transactions By Date Range
      description: Retrieve the transactions for a specific account and date range
      operationId: viewTransactionsByDateRange_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: fromDate
        in: path
        description: fromDate
        required: true
        schema:
          type: string
      - name: throughDate
        in: path
        description: throughDate
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransactionDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/trustedContactPerson/delete/{accountNumber}:
    delete:
      tags:
      - Account Trusted Contact Person API
      summary: Delete Trusted Contact Person
      description: Delete trusted contact person
      operationId: deleteTrustedContactPersonUsingDELETE
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedContactResponse'
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v1/trustedContactPerson/save:
    put:
      tags:
      - Account Trusted Contact Person API
      summary: Save Trusted Contact Person
      description: Save trusted contact person
      operationId: saveTrustedContactPersonUsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedContactDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedContactResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/account/v1/trustedContactPerson/{accountNumber}:
    get:
      tags:
      - Account Trusted Contact Person API
      summary: Retrieve Trusted Contact Person
      description: Retrieve trusted contact person related to the account number specified
      operationId: retrieveTrustedContactPersonUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedContactResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/account/v2/interestedParty/save:
    put:
      tags:
      - Interested Party API
      summary: saveInterestedPartyByAccount_v2
      operationId: saveInterestedPartyByAccount_v2UsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterestedPartyRest2'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInterestedPartyResponseDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/accountType/v1/accountType/{accountTypeCode}:
    get:
      tags:
      - Account Type API
      summary: View Account Type Detail
      description: Retrieve detailed information that pertains to the account type
        specified
      operationId: viewAccountTypeDetail_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountTypeCode
        in: path
        description: accountTypeCode
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTypeDetailDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/accountType/v1/accountTypes:
    get:
      tags:
      - Account Type API
      summary: View Account Types
      description: Retrieve information that pertains to the account type specified
      operationId: viewAccountTypes_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTypeListDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/aggInvestor/v1/config:
    put:
      tags:
      - agg-investor-controller
      summary: updateAggInvestor
      operationId: updateAggInvestorUsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggInvestorUpdateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEntity'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/aggInvestor/v1/config/search:
    get:
      tags:
      - agg-investor-controller
      summary: findConfigBySearch
      operationId: findConfigBySearchUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: query
        description: accountNumber
        schema:
          type: integer
          format: int32
      - name: guid
        in: query
        description: guid
        schema:
          type: string
      - name: userId
        in: query
        description: userId
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggInvestorRestResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/aggInvestor/v1/config/{id}:
    get:
      tags:
      - agg-investor-controller
      summary: findConfigById
      operationId: findConfigByIdUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggInvestorRestResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/aggInvestor/v1/heldAways:
    get:
      tags:
      - agg-investor-controller
      summary: findConfigById
      operationId: findConfigByIdUsingGET_1
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggHeldAwaysRestResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/analytics/v1/analyticsSummary/{summaryType}:
    get:
      tags:
      - Analytics Summary API
      summary: Analytics Summary
      description: Retrieve summary analytics that pertains to the user's book of
        business.
      operationId: analyticsSummary_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: summaryType
        in: path
        description: summaryType
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmSearchResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/beneficiary/v1/beneficiaries:
    get:
      tags:
      - Beneficiary API
      summary: Search For Beneficiary
      description: Retrieve a list of beneficiaries
      operationId: doSearchForBeneficiary_version1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: search
        in: query
        description: search
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficiarySearchResult'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/beneficiary/v1/beneficiary/create:
    post:
      tags:
      - Beneficiary Maintenance API
      summary: Create Beneficiary
      description: Create a new Beneficiary that can be used to attach to an account
      operationId: createBeneficiary_v1UsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param0
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryCreateRestRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param0
  /rest/beneficiary/v1/beneficiary/edit/{beneficiaryId}:
    post:
      tags:
      - Beneficiary Maintenance API
      summary: Update Beneficiary
      description: Update a beneficiary that already exists.
      operationId: editBeneficiary_v1UsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: beneficiaryId
        in: path
        description: beneficiaryId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryCreateRestRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/beneficiary/v1/beneficiary/{beneficiaryId}:
    get:
      tags:
      - Beneficiary API
      summary: Find Beneficiary
      description: Retrieve detailed information that pertains to the beneficiary
        specified.
      operationId: doFindBeneficiary_version1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: beneficiaryId
        in: path
        description: beneficiaryId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficiarySearchResult'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/bulletin/v1/bulletin/{bulletinId}:
    get:
      tags:
      - Bulletins API
      summary: Get Bulletin
      description: Retrieve a specific bulletin
      operationId: getBulletinUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: bulletinId
        in: path
        description: bulletinId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulletinResponseResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/bulletin/v1/bulletins:
    get:
      tags:
      - Bulletins API
      summary: Get Bulletins
      description: Retrieve a list of bulletins
      operationId: getAllBulletinsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulletinsResponseResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/bulletin/v1/removeBulletin/{bulletinId}:
    get:
      tags:
      - Bulletins API
      summary: Remove Bulletin
      description: Remove a bulletin
      operationId: removeBulletinUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: bulletinId
        in: path
        description: bulletinId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/docusign/account/brands:
    get:
      tags:
      - Docusign API
      summary: retrieveBrands
      operationId: retrieveBrandsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brands'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/docusign/account/{sobo}/envelope:
    post:
      tags:
      - Docusign API
      summary: createEnvelope
      operationId: createEnvelopeUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: sobo
        in: path
        description: sobo
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvelopeDefinition'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvelopeResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/docusign/account/{sobo}/folder/{folderId}/envelopes:
    get:
      tags:
      - Docusign API
      summary: retrieveEnvelopesFromUserFolder
      operationId: retrieveEnvelopesFromUserFolderUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: folderId
        in: path
        description: folderId
        required: true
        schema:
          type: string
      - name: fromDate
        in: query
        description: fromDate
        schema:
          type: string
          format: date-time
      - name: searchText
        in: query
        description: searchText
        schema:
          type: string
      - name: sobo
        in: path
        description: sobo
        required: true
        schema:
          type: string
      - name: status
        in: query
        description: status
        schema:
          type: string
      - name: toDate
        in: query
        description: toDate
        schema:
          type: string
          format: date-time
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeSearchResult'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/docusign/account/{sobo}/folders:
    get:
      tags:
      - Docusign API
      summary: retrieveUserFolders
      operationId: retrieveUserFoldersUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: sobo
        in: path
        description: sobo
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folders'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/employer/v1/employers:
    get:
      tags:
      - Employer API
      summary: Fetch Employers
      description: Retrieve a list of Employers for the RIA.
      operationId: fetchEmployers_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerSearchResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/docusign/templates/{accountNumber}:
    get:
      tags:
      - Electronic Signature Settings API
      summary: Retrieves DocuSign Templates filtered by the Template Locked attribute
      operationId: retrieveTemplatesLockedUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: templateLocked
        in: query
        description: templateLocked
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocusignFormDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/docusign/templates/{accountNumber}/unlocksigners:
    put:
      tags:
      - Electronic Signature Settings API
      summary: Unlocks all templates recipients signers templateLocked
      operationId: updateAllSignersTemplateLockedUsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/docusign/templates/{accountNumber}/unlocktemplatesigners/{templateId}:
    put:
      tags:
      - Electronic Signature Settings API
      summary: Unlocks the corresponding template id recipients signers templateLocked
      operationId: updateRecipientsSignersUsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: templateId
        in: path
        description: templateId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/envelope/link/{envelopeId}:
    get:
      tags:
      - Electronic Signature Envelope Search API
      summary: View Link
      description: View link
      operationId: viewLink_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: envelopeId
        in: path
        description: envelopeId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeLinkDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/envelope/resend/{envelopeId}:
    put:
      tags:
      - Electronic Signature Envelope Send API
      summary: Resend Envelope
      description: Resend documents to recipients for an account to be signed electronically
      operationId: resendEnvelope_v1UsingPUT
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: envelopeId
        in: path
        description: envelopeId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicSignatureSendStatusDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/envelope/send:
    post:
      tags:
      - Electronic Signature Envelope Send API
      summary: Send Envelope
      description: Send documents to recipients for an account to be signed electronically.
      operationId: sendEnvelope_v1UsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param0
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectronicSignatureEnvelopeDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicSignatureSendStatusDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param0
  /rest/esignature/v1/envelope/{envelopeId}:
    get:
      tags:
      - Electronic Signature Envelope Search API
      summary: View Envelope
      description: Retrieve detailed information about a Docusign envelope that have
        been sent/created by the authenticated API User.
      operationId: viewEnvelope_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: envelopeId
        in: path
        description: envelopeId
        required: true
        schema:
          type: string
      - name: retrieveDocuments
        in: query
        description: retrieveDocuments
        schema:
          type: boolean
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeSearchResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/envelopeSettings/accountForms/{accountNumber}:
    get:
      tags:
      - Electronic Signature Settings API
      summary: Retrieve Envelope Account Forms
      description: Retrieves a list of account forms that are available to use in
        the eSignature process.
      operationId: retrieveEnvelopeAccountFormsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeSettingsAccountFormsDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/envelopeSettings/advisorTemplates/{accountNumber}:
    get:
      tags:
      - Electronic Signature Settings API
      summary: Retrieve Envelope Advisor templates
      description: Retrieves a list of personal templates that are available to use
        in the eSignature process.
      operationId: retrieveEnvelopeAdvisorTemplatesUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeSettingsAccountFormsDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/envelopeSettings/proposals/{accountNumber}:
    get:
      tags:
      - Electronic Signature Settings API
      summary: Retrieve Envelope Proposal
      description: Retrieves a list of proposals that are available to use in the
        eSignature process.
      operationId: retrieveEnvelopeProposalUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeSettingsProposalDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/envelopeSettings/recipients/{accountNumber}:
    get:
      tags:
      - Electronic Signature Settings API
      summary: Retrieve Envelope Recipients
      description: Retrieves a list of recipients that are available to use in the
        eSignature process.
      operationId: retrieveEnvelopeRecipientsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeSettingsRecipientsDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/envelopeSettings/{accountNumber}:
    get:
      tags:
      - Electronic Signature Settings API
      summary: Retrieve Envelope Settings
      description: "Retrieves all of the eSignature settings that are available to\
        \ build a request for an account. Included are the available account forms,\
        \ recipients, and proposals."
      operationId: retrieveEnvelopeSettingsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountNumber
        in: path
        description: accountNumber
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeSettingsDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/esignature/v1/envelopes:
    get:
      tags:
      - Electronic Signature Envelope Search API
      summary: View Envelopes
      description: "Retrieves a list of envelopes that are associated with the user\
        \ authenticated. If no parameters are specified, the default folder is the\
        \ Sent Items folders with envelopes having a status of Sent."
      operationId: viewEnvelopes_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: envelopeStatus
        in: query
        description: envelopeStatus
        schema:
          type: string
      - name: folderType
        in: query
        description: folderType
        schema:
          type: string
      - name: fromDate
        in: query
        description: fromDate
        schema:
          type: string
      - name: toDate
        in: query
        description: toDate
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopeSearchResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/fee/v1/feeFamilies:
    get:
      tags:
      - Fee Family API
      summary: Fetch Fee Families
      description: Retrieve a list of Fee Families.
      operationId: fetchFeeFamilies_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: search
        in: query
        description: search
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeFamilySearchResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/fee/v1/feeFamily/{feeFamilyId}:
    get:
      tags:
      - Fee Family API
      summary: Fee Family Lookup
      description: Retrieve detailed information that pertains to the fee family specified.
      operationId: feeFamilyLookup_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: feeFamilyId
        in: path
        description: feeFamilyId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeFamilyRestDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/fee/v1/feeSchedule/{feeScheduleId}:
    get:
      tags:
      - Fee Family API
      summary: Fee Schedule Lookup
      description: Retrieve detailed information that pertains to the fee schedule
        specified.
      operationId: feeScheduleLookup_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: feeScheduleId
        in: path
        description: feeScheduleId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeFamilyRestDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/fee/v1/feeSchedules:
    get:
      tags:
      - Fee Family API
      summary: Fetch Fee Schedules
      description: Retrieve a list of all Fee Schedules
      operationId: fetchAllFees_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: excludeFeesForFamilyId
        in: query
        description: excludeFeesForFamilyId
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeScheduleSearchResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/fee/v1/feeSchedules/accountType/{accountType}:
    get:
      tags:
      - Fee Family API
      summary: Fetch Fee Schedules For Account Type
      description: Retrieve a list of all Fee Schedules for a specific Account Type
      operationId: fetchAllFeesByAccountType_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountType
        in: path
        description: accountType
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeScheduleSearchResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/firm/v1/firm/{firmId}:
    get:
      tags:
      - Firm API
      summary: Firm Lookup
      description: Retrieve detailed information that pertains to the specified firm.
      operationId: firmLookup_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: firmId
        in: path
        description: firmId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmSearchResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/firm/v1/firms:
    get:
      tags:
      - Firm API
      summary: Fetch Firms
      description: Retrieve a list of Firms.
      operationId: fetchFirms_v1UsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: search
        in: query
        description: search
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmSearchResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/model/v1/allocation/{modelId}:
    get:
      tags:
      - Model Allocation API
      summary: View Model Allocation
      description: Retrieve allocations for a model.
      operationId: viewModelAllocationUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: modelId
        in: path
        description: modelId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelAllocationDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/model/v1/riamodels/{advisorId}:
    get:
      tags:
      - Ria Model API
      summary: Get Models For Ria
      description: Retrieve a list of models for a specified RIA
      operationId: getModelsForRiaUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: advisorId
        in: path
        description: advisorId
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiaModelDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/oneTimeContribution/v1/ach:
    post:
      tags:
      - One-Time Contributions API
      summary: Create a One-Time ACH Contribution for an account
      operationId: achUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributionAchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoResponseDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/oneTimeContribution/v1/create:
    post:
      tags:
      - One-Time Contributions API
      summary: Create a One-Time Contribution for an account
      description: Sending the same values several times will create additional entries
        for each request
      operationId: createUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param0
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributionDigestRest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionResponseResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param0
  /rest/oneTimeContribution/v1/listAllForAccount/{accountId}:
    get:
      tags:
      - One-Time Contributions API
      summary: Get One-Time Contributions for an account
      description: Retrieve a list of contributions
      operationId: listAllForAccountUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: accountId
        in: path
        description: accountId
        required: true
        schema:
          type: integer
          format: int32
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionResponseResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/representative/v1/create:
    post:
      tags:
      - Representative Maintenance API
      summary: Create Representative
      description: Create a new representative record
      operationId: createRepresentativeUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param0
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepresentativeGenerationDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepresentativeCreateResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param0
  /rest/representative/v1/representatives:
    get:
      tags:
      - Representatives API
      summary: Get Representatives
      description: Get a list of representatives visible to the user
      operationId: listRepresentativesUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: sortBy
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepresentativesResultDigest'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/role/update/{advisorId}/{tenantId}/{userType}/{userId}/{personId}:
    get:
      tags:
      - People Organization API
      summary: Update Person Organizations
      description: Update the person organizational information.
      operationId: updatePersonOrganizationsUsingGET
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: advisorId
        in: path
        description: advisorId
        required: true
        schema:
          type: string
      - name: personId
        in: path
        description: personId
        required: true
        schema:
          type: integer
          format: int64
      - name: tenantId
        in: path
        description: tenantId
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: string
      - name: userType
        in: path
        description: userType
        required: true
        schema:
          type: string
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
  /rest/salesforce/v1/case/create:
    post:
      tags:
      - Salesforce Case API
      summary: caseCreate
      operationId: caseCreateUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param2
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesforceCaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesforceResponse'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param2
  /rest/statementFamily/v1/create:
    post:
      tags:
      - Statement Family API
      summary: Create Statement Family
      description: Creates a statement family
      operationId: createStatementFamilyUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatementFamilyEditDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementFamilyResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
  /rest/statementFamily/v1/edit/:
    post:
      tags:
      - Statement Family API
      summary: Edit Statement Family
      description: Edits a statement family
      operationId: editStatementFamilyDetailsUsingPOST
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Content-Type
        required: true
        schema:
          type: string
          default: application/json
      - name: x-tca-api-key
        in: header
        description: x-tca-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: param1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatementFamilyEditDigest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementFamilyResultDigest'
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      security:
      - basic: []
      x-codegen-request-body-name: param1
components:
  schemas:
    AccountAssetsInTransferDetailDigest:
      title: AccountAssetsInTransferDetailDigest
      type: object
      properties:
        assetStatus:
          type: string
        costBasis:
          type: number
        dateReceived:
          type: string
        expectedValueOfAssets:
          type: number
        model:
          $ref: '#/components/schemas/ModelDigest'
        quantity:
          type: number
        referenceNumber:
          type: integer
          format: int32
        security:
          $ref: '#/components/schemas/SecurityBasicDigest'
        sellReg:
          type: string
    AccountAssetsInTransferDigest:
      title: AccountAssetsInTransferDigest
      type: object
      properties:
        assetsInTransferDetails:
          type: array
          items:
            $ref: '#/components/schemas/AccountAssetsInTransferDetailDigest'
        closeDate:
          type: string
        openDate:
          type: string
        pendingAssets:
          type: number
        pendingCash:
          type: number
        sequenceNumber:
          type: integer
          format: int32
        status:
          type: string
        totalPending:
          type: number
        totalReceived:
          type: number
        totalValue:
          type: number
        transferringFirm:
          $ref: '#/components/schemas/TransferringFirmDigest'
        transferringFirmAccountNumber:
          type: string
        transferringFirmAccountType:
          type: string
    AccountAssetsInTransferResultDigest:
      title: AccountAssetsInTransferResultDigest
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        assetsInTransfer:
          type: array
          items:
            $ref: '#/components/schemas/AccountAssetsInTransferDigest'
        message:
          type: string
        status:
          type: string
    AccountAuthorizationsInfo:
      title: AccountAuthorizationsInfo
      type: object
      properties:
        accountNumber:
          type: string
        achDigests:
          type: array
          items:
            $ref: '#/components/schemas/SimpleAccountAuthorizationsAchDigest'
        achcDigests:
          type: array
          items:
            $ref: '#/components/schemas/SimpleAccountAuthorizationsAchDigest'
        addressChangeWarn:
          type: boolean
        adjSystDistRmdFlag:
          type: boolean
        authParty1:
          type: string
        authParty2:
          type: string
        authParty3:
          type: string
        authParty4:
          type: string
        authPartyIndependentFlag:
          type: boolean
        authPartyNoteLines:
          type: array
          items:
            type: string
        cashDistCount:
          type: integer
          format: int32
        cashDistsSinceDate:
          type: string
        changeAchDate:
          type: string
        contributionAccountType:
          type: string
        contributionChangeTermSystAch:
          type: string
        contributionEstablishSystAch:
          type: string
        contributionOnDemandAch:
          type: boolean
        courtOrderFlag:
          type: boolean
        iraChangeCheckDate:
          type: string
        iraCheckToAddrDate:
          type: string
        iraEstabCheckDate:
          type: string
        iraEstabSystAch:
          type: string
        iraInternalTransferDate:
          type: string
        iraWireDate:
          type: string
        lastAddressChangeDate:
          type: string
        otherNoteLines:
          type: array
          items:
            type: string
        pledgedCollateralFlag:
          type: boolean
        poaFlag:
          type: boolean
        systDistFlag:
          type: boolean
        taxLienFlag:
          type: boolean
        wireAba:
          type: string
        wireBankAccountName:
          type: string
        wireBankAccountNo:
          type: string
        wireNoteLines:
          type: array
          items:
            type: string
        wirePurpose:
          type: string
    AccountAuthorizationsResponseDigest:
      title: AccountAuthorizationsResponseDigest
      type: object
      properties:
        accountAuthorizations:
          $ref: '#/components/schemas/AccountAuthorizationsInfo'
        message:
          type: string
        status:
          type: string
    AccountBalanceDigest:
      title: AccountBalanceDigest
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        asOfDate:
          type: string
        currentCashBalance:
          type: number
        netChange:
          type: number
    AccountBasicDigest:
      title: AccountBasicDigest
      type: object
      properties:
        accountAsset:
          type: string
        accountAssetOtherDesc:
          type: string
        accountPurpose:
          type: string
        accountPurposeOtherDesc:
          type: string
        accountStatus:
          type: string
        accountValue:
          type: number
        address:
          $ref: '#/components/schemas/SimpleAddressDigest'
        advisorAbbreviation:
          type: string
        advisorId:
          type: integer
          format: int32
        advisorName:
          type: string
        alphaSort:
          type: string
        birthDate:
          type: string
        dateCloseInitiated:
          type: string
        dateCreated:
          type: string
        dateOpened:
          type: string
        dateTerminated:
          type: string
        emailAddress:
          type: string
        firstDepositDate:
          type: string
        industry:
          type: string
        jointBirthDate:
          type: string
        jointTaxId:
          type: string
        legalName1:
          type: string
        legalName2:
          type: string
        legalName3:
          type: string
        mailingName1:
          type: string
        mailingName2:
          type: string
        marginOrCash:
          type: string
        name:
          type: string
        number:
          type: string
        owners:
          type: array
          items:
            $ref: '#/components/schemas/AccountRegDigest'
        phones:
          type: array
          items:
            $ref: '#/components/schemas/AccountPhoneDigest'
        repId:
          type: integer
          format: int32
        repName:
          type: string
        statementFamilyId:
          type: string
        statementFrequency:
          type: string
        taxId:
          type: string
        type:
          type: string
        typeDescription:
          type: string
    AccountBeneficialOwnerDetailDigest:
      title: AccountBeneficialOwnerDetailDigest
      type: object
      properties:
        accountNumber:
          type: integer
          format: int32
        address:
          type: string
        city:
          type: string
        country:
          type: string
        countryOfCitizenship:
          type: string
        countryOfIssuancePassport:
          type: string
        countryOfLegalResidence:
          type: string
        dateOfBirth:
          type: string
        firstName:
          type: string
        foreignPostalCode:
          type: string
        foreignProvince:
          type: string
        idType:
          type: string
        lastName:
          type: string
        middleInitial:
          type: string
        passportID:
          type: string
        passportIDExpirationDate:
          type: string
        percentageOfOwnership:
          type: number
        residentStatus:
          type: string
        ssn:
          type: string
        state:
          type: string
        title:
          type: string
        zipCode:
          type: string
    AccountBeneficialOwnersRestDigest:
      title: AccountBeneficialOwnersRestDigest
      type: object
      properties:
        digests:
          type: array
          items:
            $ref: '#/components/schemas/AccountBeneficialOwnerDetailDigest'
        message:
          type: string
        status:
          type: string
    AccountBeneficiariesResultDigest:
      title: AccountBeneficiariesResultDigest
      type: object
      properties:
        accountId:
          type: string
        beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/AccountBeneficiarySearchResultDigest'
        message:
          type: string
        resultCount:
          type: integer
          format: int32
        status:
          type: string
    AccountBeneficiaryCreateRequest:
      title: AccountBeneficiaryCreateRequest
      type: object
      properties:
        beneficiaryId:
          type: string
        beneficiaryType:
          type: string
        contingentPercentage:
          type: number
        primaryPercentage:
          type: number
        spouse:
          type: boolean
    AccountBeneficiarySearchResultDigest:
      title: AccountBeneficiarySearchResultDigest
      type: object
      properties:
        beneficiaryId:
          type: integer
          format: int32
        birthDate:
          type: string
        contingentPercentage:
          type: number
        name:
          type: string
        primaryPercentage:
          type: number
        spouse:
          type: boolean
        taxId:
          type: string
        type:
          type: string
    AccountControlPersonDigest:
      title: AccountControlPersonDigest
      type: object
      properties:
        accountNumber:
          type: integer
          format: int32
        address:
          type: string
        city:
          type: string
        country:
          type: string
        countryOfCitizenship:
          type: string
        countryOfIssuancePassport:
          type: string
        countryOfLegalResidence:
          type: string
        dateOfBirth:
          type: string
        firstName:
          type: string
        foreignPostalCode:
          type: string
        foreignProvince:
          type: string
        idType:
          type: string
        lastName:
          type: string
        message:
          type: string
        middleInitial:
          type: string
        passportID:
          type: string
        passportIDExpirationDate:
          type: string
        residentStatus:
          type: string
        ssn:
          type: string
        state:
          type: string
        status:
          type: string
        title:
          type: string
        zipCode:
          type: string
    AccountDeliveryOptionsDigest:
      title: AccountDeliveryOptionsDigest
      type: object
      properties:
        accountNumber:
          type: integer
          format: int32
        deliveryFreq:
          type: string
        deliveryMethod:
          type: string
        documentType:
          type: string
    AccountDeliveryOptionsRequest:
      title: AccountDeliveryOptionsRequest
      type: object
      properties:
        accountNumber:
          type: string
        deliveryOptionsUpdates:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeliveryOptionsUpdateDigest'
    AccountDeliveryOptionsResponseDigest:
      title: AccountDeliveryOptionsResponseDigest
      type: object
      properties:
        deliveryOptions:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeliveryOptionsDigest'
        message:
          type: string
        status:
          type: string
    AccountDeliveryOptionsUpdateDigest:
      title: AccountDeliveryOptionsUpdateDigest
      type: object
      properties:
        deliveryFreq:
          type: string
        deliveryMethod:
          type: string
        documentType:
          type: string
    AccountFeeFamilyRestDigest:
      title: AccountFeeFamilyRestDigest
      type: object
      properties:
        accountNumber:
          type: string
        familyPaidByAccountNumber:
          type: string
        familyPaidByPercent:
          type: number
        feeFamilyId:
          type: string
    AccountFeeScheduleDigest:
      title: AccountFeeScheduleDigest
      type: object
      properties:
        feeScheduleId:
          type: string
        modelIds:
          type: array
          items:
            type: string
        modelRelationType:
          type: string
        paidByAccountNumber:
          type: string
        paidByPercent:
          type: number
        representativeSplitPercent:
          type: number
    AccountFirmContactsDigest:
      title: AccountFirmContactsDigest
      type: object
      properties:
        accountNumber:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactInformationDigest'
        detailMessages:
          type: array
          items:
            $ref: '#/components/schemas/ResponseErrorMessage'
    AccountFirmContactsResponseDigest:
      title: AccountFirmContactsResponseDigest
      type: object
      properties:
        accountFirmContacts:
          $ref: '#/components/schemas/AccountFirmContactsDigest'
        message:
          type: string
        status:
          type: string
    AccountFormDocumentResultDigest:
      title: AccountFormDocumentResultDigest
      type: object
      properties:
        message:
          type: string
        pdf:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        status:
          type: string
    AccountFormResultDigest:
      title: AccountFormResultDigest
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        name:
          type: string
        required:
          type: boolean
    AccountFormsResultDigest:
      title: AccountFormsResultDigest
      type: object
      properties:
        accountFormDigests:
          type: array
          items:
            $ref: '#/components/schemas/AccountFormResultDigest'
        message:
          type: string
        status:
          type: string
    AccountGenerationAccountDigest:
      title: AccountGenerationAccountDigest
      type: object
      properties:
        accountAsset:
          type: string
        accountAssetOtherDesc:
          type: string
        accountNumber:
          type: string
        accountPurpose:
          type: string
        accountPurposeOtherDesc:
          type: string
        accountType:
          type: string
        address:
          $ref: '#/components/schemas/SimpleAddressDigest'
        advisorId:
          type: integer
          format: int32
        alphaSort:
          type: string
        birthDate:
          type: string
        clientUserId:
          type: string
        createdBy:
          type: string
        emailAddress:
          type: string
        employerMasterId:
          type: string
        employerName:
          type: string
        industry:
          type: string
        jointBirthDate:
          type: string
        jointPii:
          $ref: '#/components/schemas/AccountPIIDigest'
        jointTaxId:
          type: string
        legalName1:
          type: string
        legalName2:
          type: string
        legalName3:
          type: string
        mailingName1:
          type: string
        mailingName2:
          type: string
        marginOrCash:
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/AccountPhoneDigest'
        pii:
          $ref: '#/components/schemas/AccountPIIDigest'
        rpReferralId:
          type: string
        rpUserId:
          type: string
        statementFrequency:
          type: string
        stmtFamilyId:
          type: integer
          format: int32
        subAccountType:
          type: string
        taxId:
          type: string
        urfId:
          type: string
        webAccess:
          type: boolean
    AccountGenerationDigest:
      title: AccountGenerationDigest
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AccountGenerationAccountDigest'
        beneficialOwners:
          $ref: '#/components/schemas/AccountBeneficialOwnersRestDigest'
        beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/AccountBeneficiaryCreateRequest'
        controlPerson:
          $ref: '#/components/schemas/AccountControlPersonDigest'
        fees:
          $ref: '#/components/schemas/AccountMaintenanceFeesDigest'
        messages:
          type: array
          items:
            type: string
        models:
          type: array
          items:
            $ref: '#/components/schemas/AccountModelDigest'
        representatives:
          type: array
          items:
            $ref: '#/components/schemas/AccountGenerationRepresentativeDigest'
        status:
          type: string
    AccountGenerationRepresentativeDigest:
      title: AccountGenerationRepresentativeDigest
      type: object
      properties:
        commissionPercent:
          type: number
        representativeId:
          type: integer
          format: int32
        representativeOnStatement:
          type: boolean
        statementCopy:
          type: boolean
    AccountInterestedPartyResponseDigest:
      title: AccountInterestedPartyResponseDigest
      type: object
      properties:
        accountNumber:
          type: string
        interestedParties:
          type: array
          items:
            $ref: '#/components/schemas/InterestedPartySummaryDigest'
        message:
          type: string
        status:
          type: string
        todContingentBenes:
          type: array
          items:
            $ref: '#/components/schemas/InterestedPartySummaryDigest'
        todPrimaryBenes:
          type: array
          items:
            $ref: '#/components/schemas/InterestedPartySummaryDigest'
    AccountMaintenanceFeesDigest:
      title: AccountMaintenanceFeesDigest
      type: object
      properties:
        accountFeeFamily:
          $ref: '#/components/schemas/AccountFeeFamilyRestDigest'
        accountFeeSchedules:
          type: array
          items:
            $ref: '#/components/schemas/AccountFeeScheduleDigest'
    AccountMaintenanceUpdateResultDigest:
      title: AccountMaintenanceUpdateResultDigest
      type: object
      properties:
        detailedMessages:
          type: array
          items:
            type: string
        message:
          type: string
        status:
          type: string
    AccountModelDigest:
      title: AccountModelDigest
      type: object
      properties:
        allocationPercent:
          type: number
        contributionPercent:
          type: number
        deviationPercent:
          type: number
        distributionPercent:
          type: number
        downDeviationPercent:
          type: number
        modelId:
          type: integer
          format: int32
        specialHandling:
          type: string
    AccountOwner:
      title: AccountOwner
      type: object
      properties:
        owners:
          type: array
          items:
            $ref: '#/components/schemas/AccountRegDigest'
    AccountPIIDigest:
      title: AccountPIIDigest
      type: object
      properties:
        citizenshipStatus:
          type: string
        expirationDate:
          type: string
        idType:
          type: string
        piiNumber:
          type: string
        state:
          type: string
    AccountPendingTransactionDigest:
      title: AccountPendingTransactionDigest
      type: object
      properties:
        actCode:
          type: string
        amount:
          type: number
        cashBalance:
          type: number
        event:
          type: string
        model:
          $ref: '#/components/schemas/ModelDigest'
        quantity:
          type: number
        security:
          $ref: '#/components/schemas/SecurityBasicDigest'
        tradeDate:
          type: string
    AccountPendingTransactionResultDigest:
      title: AccountPendingTransactionResultDigest
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        message:
          type: string
        pendingTransactions:
          type: array
          items:
            $ref: '#/components/schemas/AccountPendingTransactionDigest'
        status:
          type: string
    AccountPhoneDigest:
      title: AccountPhoneDigest
      type: object
      properties:
        phone:
          type: string
        phoneType:
          type: string
    AccountPositionAggregatedDigest:
      title: AccountPositionAggregatedDigest
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        custodyManagement:
          type: string
        institution:
          type: string
        positions:
          type: array
          items:
            $ref: '#/components/schemas/PositionDigest'
    AccountPositionDigest:
      title: AccountPositionDigest
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        positions:
          type: array
          items:
            $ref: '#/components/schemas/PositionDigest'
    AccountRegDigest:
      title: AccountRegDigest
      type: object
      properties:
        brokerDealerCompanyName:
          type: string
        businessPhoneNumber:
          type: string
        dateOfBirth:
          type: string
        directorCompanyName:
          type: string
        emailAddress:
          type: string
        employerAddressCity:
          type: string
        employerAddressCountry:
          type: string
        employerAddressLine1:
          type: string
        employerAddressLine2:
          type: string
        employerAddressStateCode:
          type: string
        employerAddressZipCode:
          type: string
        employerName:
          type: string
        employmentStatus:
          type: string
        firstName:
          type: string
        homePhoneNumber:
          type: string
        lastName:
          type: string
        legalResidenceCountry:
          type: string
        mailingAddressCity:
          type: string
        mailingAddressCountry:
          type: string
        mailingAddressLine1:
          type: string
        mailingAddressLine2:
          type: string
        mailingAddressStateCode:
          type: string
        mailingAddressZipCode:
          type: string
        maritalStatus:
          type: string
        middleName:
          type: string
        mobilePhoneNumber:
          type: string
        numberOfDependents:
          type: integer
          format: int32
        occupation:
          type: string
        physicalAddressCity:
          type: string
        physicalAddressCountry:
          type: string
        physicalAddressLine1:
          type: string
        physicalAddressLine2:
          type: string
        physicalAddressStateCode:
          type: string
        physicalAddressZipCode:
          type: string
        prefix:
          type: string
        regNumber:
          type: integer
          format: int32
        suffix:
          type: string
        taxId:
          type: string
        taxIdType:
          type: string
    AccountResultDigest:
      title: AccountResultDigest
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountSearchAccountDigest'
        message:
          type: string
        offset:
          type: integer
          format: int32
        rowsAvailable:
          type: integer
          format: int32
        rowsReturned:
          type: integer
          format: int32
        status:
          type: string
    AccountRmdSummaryDigest:
      title: AccountRmdSummaryDigest
      type: object
      properties:
        accountNumber:
          type: string
        message:
          type: string
        rmdTypeCode:
          type: string
        rmdYears:
          type: array
          items:
            $ref: '#/components/schemas/RmdVO'
        status:
          type: string
    AccountSearchAccountDigest:
      title: AccountSearchAccountDigest
      type: object
      properties:
        accountStatus:
          type: string
        accountValue:
          type: number
        address:
          $ref: '#/components/schemas/SimpleAddressDigest'
        advisorId:
          type: integer
          format: int32
        dateCreated:
          type: string
        dateOpened:
          type: string
        emailAddress:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        name:
          type: string
        number:
          type: string
        priorAccountNumber:
          type: string
        representativeId:
          type: integer
          format: int32
        representativeName:
          type: string
        statementFamilyId:
          type: string
        terminationDate:
          type: string
        type:
          type: string
        typeDescription:
          type: string
    AccountStatementDocumentResultDigest:
      title: AccountStatementDocumentResultDigest
      type: object
      properties:
        message:
          type: string
        statement:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        status:
          type: string
    AccountStatementsResultDigest:
      title: AccountStatementsResultDigest
      type: object
      properties:
        message:
          type: string
        statementDigests:
          type: array
          items:
            $ref: '#/components/schemas/StatementResultDigest'
        status:
          type: string
    AccountSummariesResultDigest:
      title: AccountSummariesResultDigest
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountSummaryDigest'
        message:
          type: string
        offset:
          type: integer
          format: int32
        rowsAvailable:
          type: integer
          format: int32
        rowsReturned:
          type: integer
          format: int32
        status:
          type: string
    AccountSummaryDigest:
      title: AccountSummaryDigest
      type: object
      properties:
        accountBalance:
          type: number
        accountNumber:
          type: string
        accountType:
          type: string
        accountTypeCode:
          type: string
        alphaName:
          type: string
        status:
          type: string
        stmtFamilyAccountStatusType:
          type: string
          enum:
          - APPROVED
          - PRIMARY
          - WAITING
          - NONE
        stmtFamilyId:
          type: string
        stmtFamilyName:
          type: string
    AccountTaxFormDocumentResultDigest:
      title: AccountTaxFormDocumentResultDigest
      type: object
      properties:
        message:
          type: string
        status:
          type: string
        taxForm:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    AccountTaxFormsResultDigest:
      title: AccountTaxFormsResultDigest
      type: object
      properties:
        message:
          type: string
        status:
          type: string
        taxFormDigests:
          type: array
          items:
            $ref: '#/components/schemas/TaxFormResultDigest'
    AccountTransactionDetailDigest:
      title: AccountTransactionDetailDigest
      type: object
      properties:
        accruedInterest:
          type: number
        activity:
          type: string
        activityCode:
          type: string
        cash:
          type: number
        comments:
          type: string
        commission:
          type: number
        costBasis:
          type: number
        fee:
          $ref: '#/components/schemas/FeeDigest'
        grossAmount:
          type: number
        model:
          $ref: '#/components/schemas/ModelDigest'
        postDate:
          type: string
        price:
          type: number
        quantity:
          type: number
        security:
          $ref: '#/components/schemas/SecurityBasicDigest'
        stateWithholding:
          type: number
        statementDate:
          type: string
        tradeDate:
          type: string
        tradeFee:
          type: number
        transactionId:
          type: string
        withholding:
          type: number
        withholdingState:
          type: string
    AccountTransactionDigest:
      title: AccountTransactionDigest
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/AccountTransactionDetailDigest'
    AccountTypeDetailDigest:
      title: AccountTypeDetailDigest
      type: object
      properties:
        accountType:
          $ref: '#/components/schemas/AccountTypeDigest'
        accountTypeForms:
          type: array
          items:
            $ref: '#/components/schemas/AccountTypeFormDigest'
        message:
          type: string
        status:
          type: string
    AccountTypeDigest:
      title: AccountTypeDigest
      type: object
      properties:
        birthDateRequired:
          type: boolean
        cashDemandAllowed:
          type: boolean
        code:
          type: string
        description:
          type: string
        qualifiedPlan:
          type: boolean
        rmdEligible:
          type: boolean
        taxFormatType:
          type: string
        taxable:
          type: boolean
    AccountTypeFormDigest:
      title: AccountTypeFormDigest
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        formId:
          type: integer
          format: int32
        required:
          type: boolean
    AccountTypeListDigest:
      title: AccountTypeListDigest
      type: object
      properties:
        accountTypes:
          type: array
          items:
            $ref: '#/components/schemas/AccountTypeDigest'
        message:
          type: string
        status:
          type: string
    AddressInformation:
      title: AddressInformation
      type: object
      properties:
        city:
          type: string
        country:
          type: string
        fax:
          type: string
        phone:
          type: string
        state:
          type: string
        street1:
          type: string
        street2:
          type: string
        zip:
          type: string
        zipPlus4:
          type: string
    AddressInformationInput:
      title: AddressInformationInput
      type: object
      properties:
        addressInformation:
          $ref: '#/components/schemas/AddressInformation'
        displayLevelCode:
          type: string
        receiveInResponse:
          type: string
    AddressInformationInput_:
      title: AddressInformationInput_
      type: object
      properties:
        addressInformation:
          $ref: '#/components/schemas/AddressInformation_'
        displayLevelCode:
          type: string
        receiveInResponse:
          type: string
    AddressInformationInput__:
      title: AddressInformationInput__
      type: object
      properties:
        addressInformation:
          $ref: '#/components/schemas/AddressInformation__'
        displayLevelCode:
          type: string
        receiveInResponse:
          type: string
    AddressInformation_:
      title: AddressInformation_
      type: object
      properties:
        city:
          type: string
        country:
          type: string
        fax:
          type: string
        phone:
          type: string
        state:
          type: string
        street1:
          type: string
        street2:
          type: string
        zip:
          type: string
        zipPlus4:
          type: string
    AddressInformation__:
      title: AddressInformation__
      type: object
      properties:
        city:
          type: string
        country:
          type: string
        fax:
          type: string
        phone:
          type: string
        state:
          type: string
        street1:
          type: string
        street2:
          type: string
        zip:
          type: string
        zipPlus4:
          type: string
    AddressRest:
      title: AddressRest
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
    AggHeldAwayRestDigest:
      title: AggHeldAwayRestDigest
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        accountStatus:
          type: string
        accountType:
          type: string
        advisorId:
          type: integer
          format: int32
        aggregationSource:
          type: string
        asset:
          type: boolean
        balanceAmount:
          type: number
        balanceCurrency:
          type: string
        connAdditionalStatus:
          type: string
        connLastUpdateAttempt:
          type: string
          format: date-time
        connLastUpdated:
          type: string
          format: date-time
        connNextUpdateScheduled:
          type: string
          format: date-time
        connUpdateEligibility:
          type: string
        container:
          type: string
        createdDate:
          type: string
          format: date-time
        createdDateUiString:
          type: string
        delete:
          type: boolean
        displayedName:
          type: string
        id:
          type: integer
          format: int64
        includeInNetWorth:
          type: boolean
        investorGuid:
          type: string
        investorHeldAccountNumber:
          type: integer
          format: int32
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedDateUiString:
          type: string
        manual:
          type: boolean
        nickname:
          type: string
        providerAccountId:
          type: integer
          format: int64
        providerId:
          type: string
        providerName:
          type: string
        userId:
          type: integer
          format: int32
        userName:
          type: string
    AggHeldAwaysRestResponse:
      title: AggHeldAwaysRestResponse
      type: object
      properties:
        heldAways:
          type: array
          items:
            $ref: '#/components/schemas/AggHeldAwayRestDigest'
        message:
          type: string
        status:
          type: string
    AggInvestorRestDigest:
      title: AggInvestorRestDigest
      type: object
    AggInvestorRestResponse:
      title: AggInvestorRestResponse
      type: object
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/AggInvestorRestDigest'
        message:
          type: string
        status:
          type: string
    AggInvestorUpdateRequest:
      title: AggInvestorUpdateRequest
      type: object
      properties:
        accountNumber:
          type: integer
          format: int32
        anyAccountNumber:
          type: boolean
        anyId:
          type: boolean
        anyInvestorGuid:
          type: boolean
        anyUserId:
          type: boolean
        heldAway:
          type: boolean
        id:
          type: integer
          format: int32
        investorGuid:
          type: string
        trigger:
          type: string
        userId:
          type: integer
          format: int32
        valid:
          type: boolean
    AnalyticsSummaryRestDigest:
      title: AnalyticsSummaryRestDigest
      type: object
      properties:
        activeAccounts:
          type: integer
          format: int32
        activeFirms:
          type: number
        activeReps:
          type: number
        averageAccountValue:
          type: number
        closedAccounts:
          type: integer
          format: int32
        closingAccountValue:
          type: number
        closingAccounts:
          type: integer
          format: int32
        description:
          type: string
        estAnnualIncome:
          type: number
        firstFundingDate:
          type: string
        medianAccountValue:
          type: number
        pendingTransfersIn:
          type: number
        recentFundingDate:
          type: string
        totalActiveAccountValue:
          type: number
        type:
          type: string
        unfundedAccounts:
          type: integer
          format: int32
    AnalyticsSummaryResultDigest:
      title: AnalyticsSummaryResultDigest
      type: object
      properties:
        message:
          type: string
        status:
          type: string
        summary:
          $ref: '#/components/schemas/AnalyticsSummaryRestDigest'
    ApproveTab:
      title: ApproveTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        buttonText:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        height:
          type: integer
          format: int32
        italic:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    AssetClassDigest:
      title: AssetClassDigest
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    AssetTypeDigest:
      title: AssetTypeDigest
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    AutoResponseDigest:
      title: AutoResponseDigest
      type: object
      properties:
        accountNumber:
          type: string
        amount:
          type: string
        id:
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ResponseErrorMessage'
    BeneficiaryCreateRestRequest:
      title: BeneficiaryCreateRestRequest
      type: object
      properties:
        beneficiary:
          $ref: '#/components/schemas/BeneficiaryRestDigest'
    BeneficiaryRestDigest:
      title: BeneficiaryRestDigest
      type: object
      properties:
        address:
          $ref: '#/components/schemas/SimpleAddressDigest'
        beneficiaryId:
          type: string
        birthDate:
          type: string
        firstName:
          type: string
        fullName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        optionalFirstName:
          type: string
        optionalFullName:
          type: string
        optionalLastName:
          type: string
        optionalMiddleName:
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/SimplePhoneRest'
        taxId:
          type: string
    BeneficiaryResult:
      title: BeneficiaryResult
      type: object
      properties:
        beneficiary:
          $ref: '#/components/schemas/BeneficiaryRestDigest'
        message:
          type: string
        status:
          type: string
    BeneficiarySearchRest:
      title: BeneficiarySearchRest
      type: object
      properties:
        beneficiaryId:
          type: string
        birthDate:
          type: string
        firstName:
          type: string
        fullName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
    BeneficiarySearchResult:
      title: BeneficiarySearchResult
      type: object
      properties:
        beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/BeneficiarySearchRest'
        message:
          type: string
        status:
          type: string
    Brand:
      title: Brand
      type: object
      properties:
        brandId:
          type: string
        brandName:
          type: string
    Brands:
      title: Brands
      type: object
      properties:
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
    BulletinColumn:
      title: BulletinColumn
      type: object
      properties:
        name:
          type: string
        numeric:
          type: boolean
        rightJustify:
          type: boolean
    BulletinDetailDigest:
      title: BulletinDetailDigest
      type: object
      properties:
        bulletinId:
          type: string
        firstValue:
          type: integer
          format: int32
        linkAvailable:
          type: boolean
        linkTypeViewAccount:
          type: boolean
        linkTypeViewTrade:
          type: boolean
        tradeDetailDigests:
          type: array
          items:
            $ref: '#/components/schemas/BulletinTradeDetailDigest'
        values:
          type: array
          items:
            type: string
    BulletinDetailResultDigest:
      title: BulletinDetailResultDigest
      type: object
      properties:
        bulletinDetails:
          type: array
          items:
            $ref: '#/components/schemas/BulletinDetailDigest'
        bulletinId:
          type: string
        columns:
          type: array
          items:
            $ref: '#/components/schemas/BulletinColumn'
        enteredDate:
          type: string
        enteredTime:
          type: string
        messages:
          type: array
          items:
            type: string
        mustRead:
          type: boolean
        subject:
          type: string
    BulletinResponseResultDigest:
      title: BulletinResponseResultDigest
      type: object
      properties:
        bulletin:
          $ref: '#/components/schemas/BulletinDetailResultDigest'
        message:
          type: string
        status:
          type: string
    BulletinResultDigest:
      title: BulletinResultDigest
      type: object
      properties:
        bulletinId:
          type: string
        enteredDate:
          type: string
        enteredTime:
          type: string
        mustRead:
          type: boolean
        subject:
          type: string
    BulletinTradeDetailDigest:
      title: BulletinTradeDetailDigest
      type: object
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        instruction:
          type: string
        lastPrice:
          type: number
        netCost:
          type: number
        otherFees:
          type: number
        security:
          type: string
        shares:
          type: number
        symbol:
          type: string
        tor:
          type: string
        tradeFee:
          type: number
        tradeId:
          type: string
    BulletinsResponseResultDigest:
      title: BulletinsResponseResultDigest
      type: object
      properties:
        bulletins:
          type: array
          items:
            $ref: '#/components/schemas/BulletinResultDigest'
        message:
          type: string
        status:
          type: string
    CarbonCopy:
      title: CarbonCopy
      type: object
      properties:
        accessCode:
          type: string
        addAccessCodeToEmail:
          type: string
        clientUserId:
          type: string
        customFields:
          type: array
          items:
            type: string
        declinedReason:
          type: string
        deliveryMethod:
          type: string
        email:
          type: string
        emailNotification:
          $ref: '#/components/schemas/EmailNotification_'
        emailRecipientPostSigningURL:
          type: string
        embeddedRecipientStartURL:
          type: string
        excludedDocuments:
          type: array
          items:
            type: string
        idCheckConfigurationName:
          type: string
        idCheckInformationInput:
          $ref: '#/components/schemas/IdCheckInformationInput_'
        inheritEmailNotificationConfiguration:
          type: string
        name:
          type: string
        note:
          type: string
        phoneAuthentication:
          $ref: '#/components/schemas/PhoneAuthentication_'
        recipientAttachments:
          type: array
          items:
            $ref: '#/components/schemas/RecipientAttachment_'
        recipientId:
          type: string
        recipientIdGuid:
          type: string
        requireIdLookup:
          type: string
        roleName:
          type: string
        routingOrder:
          type: string
        samlAuthentication:
          $ref: '#/components/schemas/SamlAuthentication_'
        smsAuthentication:
          $ref: '#/components/schemas/SmsAuthentication_'
        socialAuthentications:
          type: array
          items:
            $ref: '#/components/schemas/SocialAuthentication_'
        status:
          type: string
        templateLocked:
          type: string
        templateRequired:
          type: string
        userId:
          type: string
    CertifiedDelivery:
      title: CertifiedDelivery
      type: object
      properties:
        accessCode:
          type: string
        addAccessCodeToEmail:
          type: string
        clientUserId:
          type: string
        customFields:
          type: array
          items:
            type: string
        declinedReason:
          type: string
        deliveryMethod:
          type: string
        email:
          type: string
        emailNotification:
          $ref: '#/components/schemas/EmailNotification__'
        emailRecipientPostSigningURL:
          type: string
        embeddedRecipientStartURL:
          type: string
        excludedDocuments:
          type: array
          items:
            type: string
        idCheckConfigurationName:
          type: string
        idCheckInformationInput:
          $ref: '#/components/schemas/IdCheckInformationInput__'
        inheritEmailNotificationConfiguration:
          type: string
        name:
          type: string
        note:
          type: string
        phoneAuthentication:
          $ref: '#/components/schemas/PhoneAuthentication__'
        recipientAttachments:
          type: array
          items:
            $ref: '#/components/schemas/RecipientAttachment__'
        recipientId:
          type: string
        recipientIdGuid:
          type: string
        requireIdLookup:
          type: string
        roleName:
          type: string
        routingOrder:
          type: string
        samlAuthentication:
          $ref: '#/components/schemas/SamlAuthentication__'
        smsAuthentication:
          $ref: '#/components/schemas/SmsAuthentication__'
        socialAuthentications:
          type: array
          items:
            $ref: '#/components/schemas/SocialAuthentication__'
        status:
          type: string
        templateLocked:
          type: string
        templateRequired:
          type: string
        userId:
          type: string
    CheckboxTab:
      title: CheckboxTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        locked:
          type: string
        mergeFieldXml:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        required:
          type: string
        selected:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    CompanyTab:
      title: CompanyTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        concealValueOnDocument:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        disableAutoSize:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        locked:
          type: string
        maxLength:
          type: integer
          format: int32
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        required:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    CompositeTemplate:
      title: CompositeTemplate
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        inlineTemplates:
          type: array
          items:
            $ref: '#/components/schemas/InlineTemplate'
        serverTemplates:
          type: array
          items:
            $ref: '#/components/schemas/ServerTemplate'
    ContactInformationDigest:
      title: ContactInformationDigest
      type: object
      properties:
        address:
          $ref: '#/components/schemas/SimpleAddressDigest'
        advisorId:
          type: string
        commissionPercent:
          type: number
        emailAddress:
          type: string
        firm:
          $ref: '#/components/schemas/FirmRestDigest'
        name1:
          type: string
        name2:
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/SimplePhoneRest'
        receivesStatements:
          type: boolean
        repId:
          type: string
        repOnStatement:
          type: boolean
    ContentDataRequestVO:
      title: ContentDataRequestVO
      type: object
      properties:
        accountNumber:
          type: string
        documentId:
          type: string
        documentName:
          type: string
        fileContent:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        hostStatus:
          type: string
        templateId:
          type: string
        templateName:
          type: string
    ContributionAchRequest:
      title: ContributionAchRequest
      type: object
      properties:
        abaName:
          type: string
        abaNameOnAccount:
          type: string
        abaNumber:
          type: string
        accountNumber:
          type: string
        activityType:
          type: string
        amount:
          type: string
        bankAccountNumber:
          type: string
        bankAccountType:
          type: string
        taxYear:
          type: string
    ContributionDigestRest:
      title: ContributionDigestRest
      type: object
      properties:
        abaName:
          type: string
        abaNameOnAccount:
          type: string
        abaNumber:
          type: string
        accountNumber:
          type: string
        activityType:
          type: string
        amount:
          type: string
        bankAccountNumber:
          type: string
        bankAccountType:
          type: string
        contributionNumber:
          type: string
        dateOfNextContribution:
          type: string
        frequency:
          type: string
        suspendFlag:
          type: string
        taxYear:
          type: string
    ContributionResponseResultDigest:
      title: ContributionResponseResultDigest
      type: object
      properties:
        contributions:
          type: array
          items:
            $ref: '#/components/schemas/ContributionDigestRest'
        message:
          type: string
        status:
          type: string
        ytd:
          type: array
          items:
            $ref: '#/components/schemas/YearAmountDigestRest'
    ContributionSuspendRequest:
      title: ContributionSuspendRequest
      type: object
      properties:
        accountNumber:
          type: string
        id:
          type: string
    CreateEnvelopeResponse:
      title: CreateEnvelopeResponse
      type: object
      properties:
        envelopeId:
          type: string
        status:
          type: string
        statusDateTime:
          type: string
        uri:
          type: string
    CustomFields:
      title: CustomFields
      type: object
      properties:
        textCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/TextCustomField'
    DateSignedTab:
      title: DateSignedTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        value:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    DateTab:
      title: DateTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        concealValueOnDocument:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        disableAutoSize:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        locked:
          type: string
        maxLength:
          type: integer
          format: int32
        mergeFieldXml:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        required:
          type: string
        senderRequired:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        validationMessage:
          type: string
        validationPattern:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    DeclineTab:
      title: DeclineTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        buttonText:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        declineReason:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        height:
          type: integer
          format: int32
        italic:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    DistributionDigestRest:
      title: DistributionDigestRest
      type: object
      properties:
        abaName:
          type: string
        abaNameOnAccount:
          type: string
        abaNumber:
          type: string
        accountNumber:
          type: string
        amount:
          type: string
        bankAccountNumber:
          type: string
        bankAccountType:
          type: string
        dateOfNextDistribution:
          type: string
        distributionNumber:
          type: integer
          format: int32
        frequency:
          type: string
    DistributionResponseResultDigest:
      title: DistributionResponseResultDigest
      type: object
      properties:
        distributions:
          type: array
          items:
            $ref: '#/components/schemas/DistributionDigestRest'
        message:
          type: string
        status:
          type: string
    DobInformationInput:
      title: DobInformationInput
      type: object
      properties:
        dateOfBirth:
          type: string
        displayLevelCode:
          type: string
        receiveInResponse:
          type: string
    DobInformationInput_:
      title: DobInformationInput_
      type: object
      properties:
        dateOfBirth:
          type: string
        displayLevelCode:
          type: string
        receiveInResponse:
          type: string
    DobInformationInput__:
      title: DobInformationInput__
      type: object
      properties:
        dateOfBirth:
          type: string
        displayLevelCode:
          type: string
        receiveInResponse:
          type: string
    Document:
      title: Document
      type: object
      properties:
        documentId:
          type: string
        name:
          type: string
        transformPdfFields:
          type: string
    DocusignAccountTemplateDigest:
      title: DocusignAccountTemplateDigest
      type: object
      properties:
        endPosition:
          type: integer
          format: int32
        envelopeTemplates:
          type: array
          items:
            $ref: '#/components/schemas/DocusignEnvelopeTemplateDigest'
        resultSetSize:
          type: integer
          format: int32
        startPosition:
          type: integer
          format: int32
        totalSetSize:
          type: integer
          format: int32
    DocusignDocumentStreamDigest:
      title: DocusignDocumentStreamDigest
      type: object
      properties:
        contentType:
          type: string
        contents:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        fileName:
          type: string
    DocusignDocumentVisibilityDigest:
      title: DocusignDocumentVisibilityDigest
      type: object
      properties:
        documentId:
          type: string
        visible:
          type: boolean
    DocusignEnvelopeTemplateDigest:
      title: DocusignEnvelopeTemplateDigest
      type: object
      properties:
        allowMarkup:
          type: boolean
        allowReassign:
          type: boolean
        anySigner:
          type: string
        authoritativeCopy:
          type: boolean
        autoMatch:
          type: boolean
        autoMatchSpecifiedByUser:
          type: boolean
        bulkConversionTemplate:
          type: boolean
        created:
          type: string
        description:
          type: string
        disableResponsiveDocument:
          type: boolean
        emailBlurb:
          type: string
        emailSubject:
          type: string
        enableWetSign:
          type: boolean
        enforceSignerVisibility:
          type: boolean
        envelopeLocation:
          type: string
        folderId:
          type: string
        folderIds:
          type: array
          items:
            type: string
        folderName:
          type: string
        lastModified:
          type: string
        name:
          type: string
        owner:
          $ref: '#/components/schemas/DocusignOwnerDigest'
        pageCount:
          type: integer
          format: int32
        passwordProtected:
          type: boolean
        recipients:
          $ref: '#/components/schemas/DocusignTemplateRecipientDigest'
        shared:
          type: boolean
        signingLocation:
          type: string
        templateId:
          type: string
        uri:
          type: string
    DocusignFormDigest:
      title: DocusignFormDigest
      type: object
      properties:
        accountFormCode:
          type: string
        advisorId:
          type: integer
          format: int32
        allowCopies:
          type: boolean
        description:
          type: string
        disableCopies:
          type: boolean
        docusignTemplateId:
          type: string
        doucsignTemplateId:
          type: string
        formOrder:
          type: integer
          format: int32
        numCopies:
          type: integer
          format: int32
        required:
          type: boolean
        selected:
          type: boolean
        uiName:
          type: string
        validationState:
          type: string
          enum:
          - VALID
          - REQUIRED_VALID
          - REQUIRED_INVALID
          - INVALID
          - DISABLED
    DocusignOwnerDigest:
      title: DocusignOwnerDigest
      type: object
      properties:
        email:
          type: string
        userId:
          type: string
        userName:
          type: string
    DocusignSignerDigest:
      title: DocusignSignerDigest
      type: object
      properties:
        accessCode:
          type: string
        agentCanEditEmail:
          type: boolean
        agentCanEditName:
          type: boolean
        completedCount:
          type: integer
          format: int32
        defaultRecipient:
          type: boolean
        deliveryMethod:
          type: string
        documentVisibility:
          type: array
          items:
            $ref: '#/components/schemas/DocusignDocumentVisibilityDigest'
        email:
          type: string
        inheritEmailNotificationConfiguration:
          type: boolean
        note:
          type: string
        recipientId:
          type: string
        recipientIdGuid:
          type: string
        recipientType:
          type: string
        requireIdLookup:
          type: boolean
        requireUploadSignature:
          type: boolean
        roleName:
          type: string
        routingOrder:
          type: integer
          format: int32
        signInEachLocation:
          type: boolean
        status:
          type: string
        templateLocked:
          type: boolean
        templateRequired:
          type: boolean
    DocusignTemplateRecipientDigest:
      title: DocusignTemplateRecipientDigest
      type: object
      properties:
        signers:
          type: array
          items:
            $ref: '#/components/schemas/DocusignSignerDigest'
    ElectronicSignatureEnvelopeDigest:
      title: ElectronicSignatureEnvelopeDigest
      type: object
      properties:
        accountForms:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeAccountFormRequestDigest'
        accountNumber:
          type: string
        advisorTemplateIds:
          type: array
          items:
            type: string
        contributionDistributionId:
          type: integer
          format: int32
        documentStreams:
          type: array
          items:
            $ref: '#/components/schemas/DocusignDocumentStreamDigest'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocusignDocumentStreamDigest'
        oneTimeContributionId:
          type: integer
          format: int32
        proposalIds:
          type: array
          items:
            type: integer
            format: int64
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeRecipientRequestDigest'
    ElectronicSignatureSendStatusDigest:
      title: ElectronicSignatureSendStatusDigest
      type: object
      properties:
        accountNumber:
          type: string
        envelopeId:
          type: string
        envelopeStatus:
          type: string
        message:
          type: string
        status:
          type: string
    EmailAddressTab:
      title: EmailAddressTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    EmailNotification:
      title: EmailNotification
      type: object
      properties:
        emailBody:
          type: string
        emailSubject:
          type: string
        supportedLanguage:
          type: string
    EmailNotification_:
      title: EmailNotification_
      type: object
      properties:
        emailBody:
          type: string
        emailSubject:
          type: string
        supportedLanguage:
          type: string
    EmailNotification__:
      title: EmailNotification__
      type: object
      properties:
        emailBody:
          type: string
        emailSubject:
          type: string
        supportedLanguage:
          type: string
    EmailTab:
      title: EmailTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        concealValueOnDocument:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        disableAutoSize:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        locked:
          type: string
        maxLength:
          type: integer
          format: int32
        mergeFieldXml:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        required:
          type: string
        senderRequired:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        validationMessage:
          type: string
        validationPattern:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    EmployerRestDigest:
      title: EmployerRestDigest
      type: object
      properties:
        employerId:
          type: string
        name:
          type: string
    EmployerSearchResultDigest:
      title: EmployerSearchResultDigest
      type: object
      properties:
        employerCount:
          type: integer
          format: int32
        employers:
          type: array
          items:
            $ref: '#/components/schemas/EmployerRestDigest'
        message:
          type: string
        status:
          type: string
    EnvelopeAccountFormDigest:
      title: EnvelopeAccountFormDigest
      type: object
      properties:
        accountFormCode:
          type: string
        description:
          type: string
        disableCopies:
          type: boolean
        docusignTemplateId:
          type: string
        required:
          type: boolean
    EnvelopeAccountFormRequestDigest:
      title: EnvelopeAccountFormRequestDigest
      type: object
      properties:
        accountFormCode:
          type: string
        copies:
          type: integer
          format: int32
    EnvelopeDefinition:
      title: EnvelopeDefinition
      type: object
      properties:
        brandId:
          type: string
        compositeTemplates:
          type: array
          items:
            $ref: '#/components/schemas/CompositeTemplate'
        customFields:
          $ref: '#/components/schemas/CustomFields'
        emailBlurb:
          type: string
        emailSubject:
          type: string
        messageLock:
          type: string
        notification:
          $ref: '#/components/schemas/Notification'
        recipientsLock:
          type: string
        status:
          type: string
    EnvelopeDetailDigest:
      title: EnvelopeDetailDigest
      type: object
      properties:
        envelope:
          $ref: '#/components/schemas/EnvelopeDigest'
        envelopeDocuments:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        message:
          type: string
        status:
          type: string
    EnvelopeDigest:
      title: EnvelopeDigest
      type: object
      properties:
        completedDate:
          type: string
        createdDate:
          type: string
        declineDate:
          type: string
        deletedDate:
          type: string
        envelopeId:
          type: string
        envelopeStatus:
          type: string
        recipientStatuses:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeRecipientStatusDigest'
        sentDate:
          type: string
        subject:
          type: string
        voidedDate:
          type: string
        voidedReason:
          type: string
    EnvelopeIdTab:
      title: EnvelopeIdTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    EnvelopeLinkDigest:
      title: EnvelopeLinkDigest
      type: object
      properties:
        message:
          type: string
        status:
          type: string
        viewEnvelopeLink:
          type: string
    EnvelopeProposalDigest:
      title: EnvelopeProposalDigest
      type: object
      properties:
        investmentAmount:
          type: number
        name:
          type: string
        proposalId:
          type: integer
          format: int64
    EnvelopeRecipientDigest:
      title: EnvelopeRecipientDigest
      type: object
      properties:
        description:
          type: string
        editable:
          type: boolean
        email:
          type: string
        emailRequired:
          type: boolean
        label:
          type: string
        name:
          type: string
        nameRequired:
          type: boolean
        phoneAuthorizationRequired:
          type: boolean
        phoneNumber:
          type: string
        phoneNumberRequired:
          type: boolean
        required:
          type: boolean
        role:
          type: string
    EnvelopeRecipientRequestDigest:
      title: EnvelopeRecipientRequestDigest
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
        role:
          type: string
    EnvelopeRecipientStatusDigest:
      title: EnvelopeRecipientStatusDigest
      type: object
      properties:
        dateCompleted:
          type: string
        dateDelivered:
          type: string
        email:
          type: string
        name:
          type: string
        routingOrder:
          type: integer
          format: int32
        status:
          type: string
        type:
          type: string
    EnvelopeSearchResult:
      title: EnvelopeSearchResult
      type: object
      properties:
        endPosition:
          type: string
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
        resultSetSize:
          type: string
        startPosition:
          type: string
        totalSetSize:
          type: string
    EnvelopeSearchResultDigest:
      title: EnvelopeSearchResultDigest
      type: object
      properties:
        envelopes:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeSummaryDigest'
        folderType:
          type: string
        message:
          type: string
        status:
          type: string
    EnvelopeSettingsAccountFormsDigest:
      title: EnvelopeSettingsAccountFormsDigest
      type: object
      properties:
        accountNumber:
          type: string
        advisorForms:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeAccountFormDigest'
        availableForms:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeAccountFormDigest'
        message:
          type: string
        status:
          type: string
    EnvelopeSettingsDigest:
      title: EnvelopeSettingsDigest
      type: object
      properties:
        accountNumber:
          type: string
        availableAccountForms:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeAccountFormDigest'
        availableAdvisorForms:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeAccountFormDigest'
        availableProposals:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeProposalDigest'
        availableRecipients:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeRecipientDigest'
        message:
          type: string
        status:
          type: string
    EnvelopeSettingsProposalDigest:
      title: EnvelopeSettingsProposalDigest
      type: object
      properties:
        accountNumber:
          type: string
        availableProposals:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeProposalDigest'
        message:
          type: string
        status:
          type: string
    EnvelopeSettingsRecipientsDigest:
      title: EnvelopeSettingsRecipientsDigest
      type: object
      properties:
        accountNumber:
          type: string
        availableRecipients:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeRecipientDigest'
        message:
          type: string
        status:
          type: string
    EnvelopeSummaryDigest:
      title: EnvelopeSummaryDigest
      type: object
      properties:
        envelopeId:
          type: string
        envelopeStatus:
          type: string
        senderName:
          type: string
        sentDate:
          type: string
        subject:
          type: string
    Expirations:
      title: Expirations
      type: object
      properties:
        expireAfter:
          type: string
        expireEnabled:
          type: string
        expireWarn:
          type: string
    FeeDigest:
      title: FeeDigest
      type: object
      properties:
        amount:
          type: number
        details:
          type: string
        typeCode:
          type: string
    FeeFamilyRestDigest:
      title: FeeFamilyRestDigest
      type: object
      properties:
        accountRelationships:
          type: array
          items:
            $ref: '#/components/schemas/AccountFeeFamilyRestDigest'
        accountsCount:
          type: string
        advisorId:
          type: integer
          format: int32
        familyName:
          type: string
        feeScheduleCount:
          type: string
        feeSchedules:
          type: array
          items:
            $ref: '#/components/schemas/FeeScheduleRestDigest'
        id:
          type: string
    FeeFamilyResultDigest:
      title: FeeFamilyResultDigest
      type: object
      properties:
        feeFamily:
          $ref: '#/components/schemas/FeeFamilyRestDigest'
        message:
          type: string
        status:
          type: string
    FeeFamilySearchResultDigest:
      title: FeeFamilySearchResultDigest
      type: object
      properties:
        feeFamilies:
          type: array
          items:
            $ref: '#/components/schemas/FeeFamilyRestDigest'
        feeFamiliesCount:
          type: integer
          format: int32
        message:
          type: string
        status:
          type: string
    FeeScheduleRestDigest:
      title: FeeScheduleRestDigest
      type: object
      properties:
        comments:
          type: string
        description:
          type: string
        flatFee:
          type: string
        frequency:
          type: string
        id:
          type: string
        includeCash:
          type: boolean
        maxFee:
          type: string
        minFee:
          type: string
        modelRelationType:
          type: string
        models:
          type: array
          items:
            $ref: '#/components/schemas/ModelDigest'
        modelsCount:
          type: integer
          format: int32
        splitPercentage:
          type: number
        useMinMax:
          type: boolean
        valuationMethod:
          type: string
    FeeScheduleResultDigest:
      title: FeeScheduleResultDigest
      type: object
      properties:
        feeSchedule:
          $ref: '#/components/schemas/FeeScheduleRestDigest'
        message:
          type: string
        status:
          type: string
    FeeScheduleSearchResultDigest:
      title: FeeScheduleSearchResultDigest
      type: object
      properties:
        feeSchedules:
          type: array
          items:
            $ref: '#/components/schemas/FeeScheduleRestDigest'
        feeSchedulesCount:
          type: integer
          format: int32
        message:
          type: string
        status:
          type: string
    FirmRestDigest:
      title: FirmRestDigest
      type: object
      properties:
        address:
          $ref: '#/components/schemas/SimpleAddressDigest'
        firmId:
          type: string
        name1:
          type: string
        name2:
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/SimplePhoneRest'
        type:
          type: string
    FirmResultDigest:
      title: FirmResultDigest
      type: object
      properties:
        firm:
          $ref: '#/components/schemas/FirmRestDigest'
        message:
          type: string
        status:
          type: string
    FirmSearchResultDigest:
      title: FirmSearchResultDigest
      type: object
      properties:
        firmCount:
          type: integer
          format: int32
        firms:
          type: array
          items:
            $ref: '#/components/schemas/FirmRestDigest'
        message:
          type: string
        status:
          type: string
    FirstNameTab:
      title: FirstNameTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    Folder:
      title: Folder
      type: object
      properties:
        folderId:
          type: string
        folderItems:
          type: array
          items:
            $ref: '#/components/schemas/FolderItem'
        hasSubFolders:
          type: string
        itemCount:
          type: string
        name:
          type: string
        owner:
          $ref: '#/components/schemas/Owner'
        subFolderCount:
          type: string
        type:
          type: string
        uri:
          type: string
    FolderItem:
      title: FolderItem
      type: object
      properties:
        completedDateTime:
          type: string
        createdDateTime:
          type: string
        envelopeId:
          type: string
        envelopeUri:
          type: string
        is21CFRPart11:
          type: string
        ownerName:
          type: string
        recipientsUri:
          type: string
        senderCompany:
          type: string
        senderEmail:
          type: string
        senderName:
          type: string
        sentDateTime:
          type: string
        status:
          type: string
        subject:
          type: string
    Folders:
      title: Folders
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
    FormulaTab:
      title: FormulaTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        concealValueOnDocument:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        disableAutoSize:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        formula:
          type: string
        isPaymentAmount:
          type: string
        italic:
          type: string
        locked:
          type: string
        maxLength:
          type: integer
          format: int32
        mergeFieldXml:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        required:
          type: string
        senderRequired:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        validationMessage:
          type: string
        validationPattern:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    FullNameTab:
      title: FullNameTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    IdCheckInformationInput:
      title: IdCheckInformationInput
      type: object
      properties:
        addressInformationInput:
          $ref: '#/components/schemas/AddressInformationInput'
        dobInformationInput:
          $ref: '#/components/schemas/DobInformationInput'
        ssn4InformationInput:
          $ref: '#/components/schemas/Ssn4InformationInput'
        ssn9InformationInput:
          $ref: '#/components/schemas/Ssn9InformationInput'
    IdCheckInformationInput_:
      title: IdCheckInformationInput_
      type: object
      properties:
        addressInformationInput:
          $ref: '#/components/schemas/AddressInformationInput_'
        dobInformationInput:
          $ref: '#/components/schemas/DobInformationInput_'
        ssn4InformationInput:
          $ref: '#/components/schemas/Ssn4InformationInput_'
        ssn9InformationInput:
          $ref: '#/components/schemas/Ssn9InformationInput_'
    IdCheckInformationInput__:
      title: IdCheckInformationInput__
      type: object
      properties:
        addressInformationInput:
          $ref: '#/components/schemas/AddressInformationInput__'
        dobInformationInput:
          $ref: '#/components/schemas/DobInformationInput__'
        ssn4InformationInput:
          $ref: '#/components/schemas/Ssn4InformationInput__'
        ssn9InformationInput:
          $ref: '#/components/schemas/Ssn9InformationInput__'
    InitialHereTab:
      title: InitialHereTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        name:
          type: string
        optional:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        scaleValue:
          type: number
          format: float
        tabId:
          type: string
        tabLabel:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    InlineTemplate:
      title: InlineTemplate
      type: object
      properties:
        customFields:
          $ref: '#/components/schemas/CustomFields'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        recipients:
          $ref: '#/components/schemas/Recipients'
        sequence:
          type: integer
          format: int32
    InterestedPartyId:
      title: InterestedPartyId
      type: object
      properties:
        accountNumber:
          type: string
        id:
          type: integer
          format: int32
    InterestedPartyRest2:
      title: InterestedPartyRest2
      type: object
      properties:
        accountNumber:
          type: string
        address:
          $ref: '#/components/schemas/AddressRest'
        id:
          type: integer
          format: int32
        name:
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/PhoneRest'
        statementFrequency:
          type: boolean
        taxForms:
          type: boolean
    InterestedPartySummaryDigest:
      title: InterestedPartySummaryDigest
      type: object
      properties:
        address:
          $ref: '#/components/schemas/SimpleAddressDigest'
        id:
          type: integer
          format: int32
        ipPercent:
          type: number
        name:
          type: string
        phones:
          type: array
          items:
            $ref: '#/components/schemas/SimplePhoneRest'
        statementFrequency:
          type: string
        taxForms:
          type: boolean
        todType:
          type: string
          enum:
          - PRIMARY
          - CONTINGENT
        transactionConfirmations:
          type: boolean
        transferOnDeath:
          type: boolean
    LastNameTab:
      title: LastNameTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    ListItem:
      title: ListItem
      type: object
      properties:
        selected:
          type: string
        text:
          type: string
        value:
          type: string
    ListTab:
      title: ListTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        listItems:
          type: array
          items:
            $ref: '#/components/schemas/ListItem'
        locked:
          type: string
        mergeFieldXml:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        required:
          type: string
        senderRequired:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    ModelAllocationDigest:
      title: ModelAllocationDigest
      type: object
      properties:
        abbreviation:
          type: string
        description:
          type: string
        modelId:
          type: string
        modelType:
          $ref: '#/components/schemas/ModelTypeDigest'
        models:
          type: array
          items:
            $ref: '#/components/schemas/ModelAllocationModelDigest'
        securities:
          type: array
          items:
            $ref: '#/components/schemas/ModelAllocationSecurityDigest'
    ModelAllocationModelDigest:
      title: ModelAllocationModelDigest
      type: object
      properties:
        abbreviation:
          type: string
        allocationPercent:
          type: number
        description:
          type: string
        modelId:
          type: string
    ModelAllocationSecurityDigest:
      title: ModelAllocationSecurityDigest
      type: object
      properties:
        cusip:
          type: string
        description:
          type: string
        goalPercent:
          type: number
        symbol:
          type: string
    ModelDigest:
      title: ModelDigest
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        endingBalance:
          type: number
        goalPercent:
          type: number
        id:
          type: integer
          format: int32
    ModelTypeDigest:
      title: ModelTypeDigest
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    NoteTab:
      title: NoteTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        height:
          type: integer
          format: int32
        italic:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    Notification:
      title: Notification
      type: object
      properties:
        expirations:
          $ref: '#/components/schemas/Expirations'
        reminders:
          $ref: '#/components/schemas/Reminders'
        useAccountDefaults:
          type: string
    NumberTab:
      title: NumberTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        concealValueOnDocument:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        disableAutoSize:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        formula:
          type: string
        isPaymentAmount:
          type: string
        italic:
          type: string
        locked:
          type: string
        maxLength:
          type: integer
          format: int32
        mergeFieldXml:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        required:
          type: string
        senderRequired:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        validationMessage:
          type: string
        validationPattern:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    OfflineAttributes:
      title: OfflineAttributes
      type: object
      properties:
        accountEsignId:
          type: string
        deviceModel:
          type: string
        deviceName:
          type: string
        gpsLatitude:
          type: string
        gpsLongitude:
          type: string
    Owner:
      title: Owner
      type: object
      properties:
        email:
          type: string
        userId:
          type: string
        userName:
          type: string
    PhoneAuthentication:
      title: PhoneAuthentication
      type: object
      properties:
        recipMayProvideNumber:
          type: string
        recordVoicePrint:
          type: string
        senderProvidedNumbers:
          type: array
          items:
            type: string
        validateRecipProvidedNumber:
          type: string
    PhoneAuthentication_:
      title: PhoneAuthentication_
      type: object
      properties:
        recipMayProvideNumber:
          type: string
        recordVoicePrint:
          type: string
        senderProvidedNumbers:
          type: array
          items:
            type: string
        validateRecipProvidedNumber:
          type: string
    PhoneAuthentication__:
      title: PhoneAuthentication__
      type: object
      properties:
        recipMayProvideNumber:
          type: string
        recordVoicePrint:
          type: string
        senderProvidedNumbers:
          type: array
          items:
            type: string
        validateRecipProvidedNumber:
          type: string
    PhoneRest:
      title: PhoneRest
      type: object
      properties:
        phone:
          type: string
        phoneType:
          type: string
    PositionDigest:
      title: PositionDigest
      type: object
      properties:
        asOfDate:
          type: string
        lastPrice:
          type: number
        marketValue:
          type: number
        model:
          $ref: '#/components/schemas/ModelDigest'
        modelActualPercent:
          type: number
        price:
          type: number
        productId:
          type: string
        quantity:
          type: number
        security:
          $ref: '#/components/schemas/SecurityBasicDigest'
        tradeLots:
          type: array
          items:
            $ref: '#/components/schemas/TradeLotDigest'
        unrealizedGainLoss:
          type: number
    Radio:
      title: Radio
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        locked:
          type: string
        pageNumber:
          type: string
        required:
          type: string
        selected:
          type: string
        tabId:
          type: string
        value:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    RadioGroupTab:
      title: RadioGroupTab
      type: object
      properties:
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        groupName:
          type: string
        radios:
          type: array
          items:
            $ref: '#/components/schemas/Radio'
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        shared:
          type: string
    RecipientAttachment:
      title: RecipientAttachment
      type: object
      properties:
        attachmentType:
          type: string
        label:
          type: string
    RecipientAttachment_:
      title: RecipientAttachment_
      type: object
      properties:
        attachmentType:
          type: string
        label:
          type: string
    RecipientAttachment__:
      title: RecipientAttachment__
      type: object
      properties:
        attachmentType:
          type: string
        label:
          type: string
    Recipients:
      title: Recipients
      type: object
      properties:
        carbonCopies:
          type: array
          items:
            $ref: '#/components/schemas/CarbonCopy'
        certifiedDeliveries:
          type: array
          items:
            $ref: '#/components/schemas/CertifiedDelivery'
        signers:
          type: array
          items:
            $ref: '#/components/schemas/Signer'
    Reminders:
      title: Reminders
      type: object
      properties:
        reminderDelay:
          type: string
        reminderEnabled:
          type: string
        reminderFrequency:
          type: string
    RepresentativeCreateResultDigest:
      title: RepresentativeCreateResultDigest
      type: object
      properties:
        message:
          type: string
        representativeId:
          type: string
        status:
          type: string
    RepresentativeDigest:
      title: RepresentativeDigest
      type: object
      properties:
        crdNumber:
          type: string
        firmId:
          type: integer
          format: int32
        id:
          type: string
        nameLine1:
          type: string
        nameLine2:
          type: string
    RepresentativeGenerationDigest:
      title: RepresentativeGenerationDigest
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        alternateNumber:
          type: string
        city:
          type: string
        crdNumber:
          type: string
        createLibertyLogin:
          type: boolean
        emailAddress:
          type: string
        firmId:
          type: integer
          format: int32
        name:
          type: string
        optionalName:
          type: string
        phoneNumber:
          type: string
        phoneType:
          type: string
        postalCode:
          type: string
        state:
          type: string
        taxId:
          type: string
    RepresentativesResultDigest:
      title: RepresentativesResultDigest
      type: object
      properties:
        message:
          type: string
        representatives:
          type: array
          items:
            $ref: '#/components/schemas/RepresentativeDigest'
        status:
          type: string
        totalRows:
          type: integer
          format: int32
    RequestStatus:
      title: RequestStatus
      type: object
      properties:
        value:
          type: string
      xml:
        name: status
        attribute: false
        wrapped: false
    ResponseEntity:
      title: ResponseEntity
      type: object
      properties:
        body:
          type: object
          properties: {}
        statusCode:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        statusCodeValue:
          type: integer
          format: int32
    ResponseErrorMessage:
      title: ResponseErrorMessage
      type: object
      properties:
        number:
          type: string
        prefix:
          type: string
        text:
          type: string
    RestResultDigest:
      title: RestResultDigest
      type: object
      properties:
        message:
          type: string
        status:
          type: string
    RiaModelDigest:
      title: RiaModelDigest
      type: object
      properties:
        abbreviation:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int32
        modelType:
          $ref: '#/components/schemas/ModelTypeDigest'
        representativeId:
          type: integer
          format: int32
    RmdVO:
      title: RmdVO
      type: object
      properties:
        minimumDistribution:
          type: number
        remainingDistribution:
          type: number
        year:
          type: integer
          format: int32
    SalesforceCaseRequest:
      title: SalesforceCaseRequest
      type: object
      properties:
        contentDataRequests:
          type: array
          items:
            $ref: '#/components/schemas/ContentDataRequestVO'
        envelopeId:
          type: string
        origin:
          type: string
        senderEmail:
          type: string
        senderUserName:
          type: string
        userLogin:
          type: string
    SalesforceCaseResponse:
      title: SalesforceCaseResponse
      type: object
      properties:
        accountNumber:
          type: string
        detailMessages:
          type: array
          items:
            $ref: '#/components/schemas/ResponseErrorMessage'
        documentId:
          type: string
        documentName:
          type: string
        parentSalesforceId:
          type: string
        salesforceId:
          type: string
        templateId:
          type: string
        templateName:
          type: string
    SalesforceResponse:
      title: SalesforceResponse
      type: object
      properties:
        envelopeId:
          type: string
        salesforceCaseResponses:
          type: array
          items:
            $ref: '#/components/schemas/SalesforceCaseResponse'
    SamlAssertionAttribute:
      title: SamlAssertionAttribute
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    SamlAssertionAttribute_:
      title: SamlAssertionAttribute_
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    SamlAssertionAttribute__:
      title: SamlAssertionAttribute__
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    SamlAuthentication:
      title: SamlAuthentication
      type: object
      properties:
        samlAssertionAttributes:
          type: array
          items:
            $ref: '#/components/schemas/SamlAssertionAttribute'
    SamlAuthentication_:
      title: SamlAuthentication_
      type: object
      properties:
        samlAssertionAttributes:
          type: array
          items:
            $ref: '#/components/schemas/SamlAssertionAttribute_'
    SamlAuthentication__:
      title: SamlAuthentication__
      type: object
      properties:
        samlAssertionAttributes:
          type: array
          items:
            $ref: '#/components/schemas/SamlAssertionAttribute__'
    SecurityBasicDigest:
      title: SecurityBasicDigest
      type: object
      properties:
        assetClass:
          $ref: '#/components/schemas/AssetClassDigest'
        assetType:
          $ref: '#/components/schemas/AssetTypeDigest'
        closingTime:
          type: string
        cusip:
          type: string
        description:
          type: string
        doNotUse:
          type: boolean
        equity:
          type: boolean
        exchangable:
          type: boolean
        firmId:
          type: integer
          format: int32
        fund:
          type: boolean
        fundServeFlag:
          type: boolean
        lastPrice:
          type: number
        lastPriceDate:
          type: string
        minimumAllocation:
          type: number
        minimumHoldingDays:
          type: integer
          format: int32
        ntfFlag:
          type: boolean
        roundingFactor:
          type: number
        settleDaysOne:
          type: integer
          format: int32
        settleDaysTwo:
          type: integer
          format: int32
        shortTermFeeDays:
          type: integer
          format: int32
        subAssetClass:
          $ref: '#/components/schemas/SubAssetClassDigest'
        symbol:
          type: string
        tradeAvailable:
          type: boolean
    ServerTemplate:
      title: ServerTemplate
      type: object
      properties:
        sequence:
          type: integer
          format: int32
        templateId:
          type: string
    SignHereTab:
      title: SignHereTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        name:
          type: string
        optional:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        scaleValue:
          type: number
          format: float
        tabId:
          type: string
        tabLabel:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    SignatureInfo:
      title: SignatureInfo
      type: object
      properties:
        fontStyle:
          type: string
        signatureInitials:
          type: string
        signatureName:
          type: string
    Signer:
      title: Signer
      type: object
      properties:
        accessCode:
          type: string
        addAccessCodeToEmail:
          type: string
        clientUserId:
          type: string
        customFields:
          type: array
          items:
            type: string
        declinedReason:
          type: string
        defaultRecipient:
          type: string
        deliveredDateTime:
          type: string
        deliveryMethod:
          type: string
        email:
          type: string
        emailNotification:
          $ref: '#/components/schemas/EmailNotification'
        emailRecipientPostSigningURL:
          type: string
        embeddedRecipientStartURL:
          type: string
        excludedDocuments:
          type: array
          items:
            type: string
        idCheckConfigurationName:
          type: string
        idCheckInformationInput:
          $ref: '#/components/schemas/IdCheckInformationInput'
        inheritEmailNotificationConfiguration:
          type: string
        name:
          type: string
        note:
          type: string
        offlineAttributes:
          $ref: '#/components/schemas/OfflineAttributes'
        phoneAuthentication:
          $ref: '#/components/schemas/PhoneAuthentication'
        recipientAttachments:
          type: array
          items:
            $ref: '#/components/schemas/RecipientAttachment'
        recipientId:
          type: string
        recipientIdGuid:
          type: string
        requireIdLookup:
          type: string
        requireSignOnPaper:
          type: string
        requireSignerCertificate:
          type: string
        roleName:
          type: string
        routingOrder:
          type: string
        samlAuthentication:
          $ref: '#/components/schemas/SamlAuthentication'
        signInEachLocation:
          type: string
        signatureInfo:
          $ref: '#/components/schemas/SignatureInfo'
        signedDateTime:
          type: string
        smsAuthentication:
          $ref: '#/components/schemas/SmsAuthentication'
        socialAuthentications:
          type: array
          items:
            $ref: '#/components/schemas/SocialAuthentication'
        status:
          type: string
        tabs:
          $ref: '#/components/schemas/Tabs'
        templateLocked:
          type: string
        templateRequired:
          type: string
        userId:
          type: string
    SignerAttachmentTab:
      title: SignerAttachmentTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        documentId:
          type: string
        name:
          type: string
        optional:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        scaleValue:
          type: number
          format: float
        tabId:
          type: string
        tabLabel:
          type: string
        xPosition:
          type: string
        yPosition:
          type: string
    SimpleAccountAuthorizationsAchDigest:
      title: SimpleAccountAuthorizationsAchDigest
      type: object
      properties:
        aba:
          type: string
        achNoteLines:
          type: array
          items:
            type: string
        authDate:
          type: string
        bankAccountNo:
          type: string
        id:
          type: integer
          format: int32
        imageId:
          type: string
        notesIncluded:
          type: boolean
        status:
          type: string
        typeOfAccount:
          type: string
    SimpleAddressDigest:
      title: SimpleAddressDigest
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
    SimplePhoneRest:
      title: SimplePhoneRest
      type: object
      properties:
        phone:
          type: string
        phoneType:
          type: string
    SmsAuthentication:
      title: SmsAuthentication
      type: object
      properties:
        senderProvidedNumbers:
          type: array
          items:
            type: string
    SmsAuthentication_:
      title: SmsAuthentication_
      type: object
      properties:
        senderProvidedNumbers:
          type: array
          items:
            type: string
    SmsAuthentication__:
      title: SmsAuthentication__
      type: object
      properties:
        senderProvidedNumbers:
          type: array
          items:
            type: string
    SocialAuthentication:
      title: SocialAuthentication
      type: object
      properties:
        authentication:
          type: string
    SocialAuthentication_:
      title: SocialAuthentication_
      type: object
      properties:
        authentication:
          type: string
    SocialAuthentication__:
      title: SocialAuthentication__
      type: object
      properties:
        authentication:
          type: string
    Ssn4InformationInput:
      title: Ssn4InformationInput
      type: object
      properties:
        displayLevelCode:
          type: string
        receiveInResponse:
          type: string
        ssn4:
          type: string
    Ssn4InformationInput_:
      title: Ssn4InformationInput_
      type: object
      properties:
        displayLevelCode:
          type: string
        receiveInResponse:
          type: string
        ssn4:
          type: string
    Ssn4InformationInput__:
      title: Ssn4InformationInput__
      type: object
      properties:
        displayLevelCode:
          type: string
        receiveInResponse:
          type: string
        ssn4:
          type: string
    Ssn9InformationInput:
      title: Ssn9InformationInput
      type: object
      properties:
        displayLevelCode:
          type: string
        ssn9:
          type: string
    Ssn9InformationInput_:
      title: Ssn9InformationInput_
      type: object
      properties:
        displayLevelCode:
          type: string
        ssn9:
          type: string
    Ssn9InformationInput__:
      title: Ssn9InformationInput__
      type: object
      properties:
        displayLevelCode:
          type: string
        ssn9:
          type: string
    SsnTab:
      title: SsnTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        concealValueOnDocument:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        disableAutoSize:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        locked:
          type: string
        maxLength:
          type: integer
          format: int32
        mergeFieldXml:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        required:
          type: string
        senderRequired:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        validationMessage:
          type: string
        validationPattern:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    StatementFamilyAccountPositionsDigest:
      title: StatementFamilyAccountPositionsDigest
      type: object
      properties:
        accountPositions:
          type: array
          items:
            $ref: '#/components/schemas/AccountPositionAggregatedDigest'
        message:
          type: string
        statementFamilyId:
          type: string
        statementFamilyName:
          type: string
        status:
          type: string
    StatementFamilyAccountResultDigest:
      title: StatementFamilyAccountResultDigest
      type: object
      properties:
        accountType:
          type: string
        name:
          type: string
        number:
          type: string
        primaryAccount:
          type: boolean
    StatementFamilyEditDigest:
      title: StatementFamilyEditDigest
      type: object
      properties:
        accounts:
          type: array
          items:
            type: string
        familyName:
          type: string
        familyNumber:
          type: string
        primaryAccountNumber:
          type: string
    StatementFamilyPositionsDigest:
      title: StatementFamilyPositionsDigest
      type: object
      properties:
        accountPositionDigests:
          type: array
          items:
            $ref: '#/components/schemas/AccountPositionDigest'
        message:
          type: string
        statementFamilyId:
          type: string
        statementFamilyName:
          type: string
        status:
          type: string
    StatementFamilyResultDigest:
      title: StatementFamilyResultDigest
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/StatementFamilyAccountResultDigest'
        familyName:
          type: string
        familyNumber:
          type: string
        familyStatus:
          type: string
        message:
          type: string
        primaryAccountNumber:
          type: string
        status:
          type: string
    StatementFamilyResultsDigest:
      title: StatementFamilyResultsDigest
      type: object
      properties:
        message:
          type: string
        statementFamilies:
          type: array
          items:
            $ref: '#/components/schemas/StatementFamilyResultDigest'
        statementFamilyCount:
          type: integer
          format: int32
        status:
          type: string
    StatementResultDigest:
      title: StatementResultDigest
      type: object
      properties:
        id:
          type: string
        resourceExpiration:
          type: string
        resourceUrl:
          type: string
        statementDate:
          type: string
        statementDescription:
          type: string
        statementName:
          type: string
    SubAssetClassDigest:
      title: SubAssetClassDigest
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    Tabs:
      title: Tabs
      type: object
      properties:
        approveTabs:
          type: array
          items:
            $ref: '#/components/schemas/ApproveTab'
        checkboxTabs:
          type: array
          items:
            $ref: '#/components/schemas/CheckboxTab'
        companyTabs:
          type: array
          items:
            $ref: '#/components/schemas/CompanyTab'
        dateSignedTabs:
          type: array
          items:
            $ref: '#/components/schemas/DateSignedTab'
        dateTabs:
          type: array
          items:
            $ref: '#/components/schemas/DateTab'
        declineTabs:
          type: array
          items:
            $ref: '#/components/schemas/DeclineTab'
        emailAddressTabs:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddressTab'
        emailTabs:
          type: array
          items:
            $ref: '#/components/schemas/EmailTab'
        envelopeIdTabs:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeIdTab'
        firstNameTabs:
          type: array
          items:
            $ref: '#/components/schemas/FirstNameTab'
        formulaTabs:
          type: array
          items:
            $ref: '#/components/schemas/FormulaTab'
        fullNameTabs:
          type: array
          items:
            $ref: '#/components/schemas/FullNameTab'
        initialHereTabs:
          type: array
          items:
            $ref: '#/components/schemas/InitialHereTab'
        lastNameTabs:
          type: array
          items:
            $ref: '#/components/schemas/LastNameTab'
        listTabs:
          type: array
          items:
            $ref: '#/components/schemas/ListTab'
        noteTabs:
          type: array
          items:
            $ref: '#/components/schemas/NoteTab'
        numberTabs:
          type: array
          items:
            $ref: '#/components/schemas/NumberTab'
        radioGroupTabs:
          type: array
          items:
            $ref: '#/components/schemas/RadioGroupTab'
        signHereTabs:
          type: array
          items:
            $ref: '#/components/schemas/SignHereTab'
        signerAttachmentTabs:
          type: array
          items:
            $ref: '#/components/schemas/SignerAttachmentTab'
        ssnTabs:
          type: array
          items:
            $ref: '#/components/schemas/SsnTab'
        textTabs:
          type: array
          items:
            $ref: '#/components/schemas/TextTab'
        titleTabs:
          type: array
          items:
            $ref: '#/components/schemas/TitleTab'
        zipTabs:
          type: array
          items:
            $ref: '#/components/schemas/ZipTab'
    TaxFormResultDigest:
      title: TaxFormResultDigest
      type: object
      properties:
        hostKey:
          type: string
        resourceExpiration:
          type: string
        resourceUrl:
          type: string
        taxFormDescription:
          type: string
        taxFormName:
          type: string
        taxFormType:
          type: string
        taxYear:
          type: string
    TextCustomField:
      title: TextCustomField
      type: object
      properties:
        name:
          type: string
        required:
          type: string
        show:
          type: string
        value:
          type: string
    TextTab:
      title: TextTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        concealValueOnDocument:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        disableAutoSize:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        formula:
          type: string
        height:
          type: integer
          format: int32
        isPaymentAmount:
          type: string
        italic:
          type: string
        locked:
          type: string
        maxLength:
          type: integer
          format: int32
        mergeFieldXml:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        required:
          type: string
        senderRequired:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        validationMessage:
          type: string
        validationPattern:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    TitleTab:
      title: TitleTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        concealValueOnDocument:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        disableAutoSize:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        locked:
          type: string
        maxLength:
          type: integer
          format: int32
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        required:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
    TotalReturnItemDigestRest:
      title: TotalReturnItemDigestRest
      type: object
      properties:
        changeInDeposits:
          type: number
        cumulativeTwr:
          type: number
        netDeposits:
          type: number
        periodDate:
          type: string
        totalMarketValue:
          type: number
        totalReturnDollars:
          type: number
    TotalReturnItemDigestsRest:
      title: TotalReturnItemDigestsRest
      type: object
      properties:
        accountNumber:
          type: string
        message:
          type: string
        resultCount:
          type: integer
          format: int32
        status:
          type: string
        twrItems:
          type: array
          items:
            $ref: '#/components/schemas/TotalReturnItemDigestRest'
    TotalReturnSummaryDigestRest:
      title: TotalReturnSummaryDigestRest
      type: object
      properties:
        endDate:
          type: string
        startDate:
          type: string
        summaryType:
          type: string
        timeWeightedReturn:
          type: number
    TotalReturnSummaryDigestsRest:
      title: TotalReturnSummaryDigestsRest
      type: object
      properties:
        accountNumber:
          type: string
        message:
          type: string
        status:
          type: string
        twrSummaries:
          type: array
          items:
            $ref: '#/components/schemas/TotalReturnSummaryDigestRest'
    TradeLotDigest:
      title: TradeLotDigest
      type: object
      properties:
        availableToTrade:
          type: number
        availableToTransfer:
          type: number
        costBasis:
          type: number
        goalPercent:
          type: number
        marketValue:
          type: number
        number:
          type: integer
          format: int32
        quantity:
          type: number
        tradeLotDate:
          type: string
        unrealizedGainLoss:
          type: number
        unrealizedLongTermGainLoss:
          type: number
        unrealizedShortTermGainLoss:
          type: number
    TransferringFirmDigest:
      title: TransferringFirmDigest
      type: object
      properties:
        firmAddress:
          $ref: '#/components/schemas/SimpleAddressDigest'
        firmId:
          type: integer
          format: int32
        name:
          type: string
    TrustedContactDigest:
      title: TrustedContactDigest
      type: object
      properties:
        email:
          type: string
        emailValid:
          type: boolean
        emailValidationState:
          type: string
          enum:
          - VALID
          - REQUIRED_VALID
          - REQUIRED_INVALID
          - INVALID
          - DISABLED
        firstName:
          type: string
        firstNameValid:
          type: boolean
        firstNameValidationState:
          type: string
          enum:
          - VALID
          - REQUIRED_VALID
          - REQUIRED_INVALID
          - INVALID
          - DISABLED
        id:
          type: integer
          format: int32
        lastName:
          type: string
        lastNameValid:
          type: boolean
        lastNameValidationState:
          type: string
          enum:
          - VALID
          - REQUIRED_VALID
          - REQUIRED_INVALID
          - INVALID
          - DISABLED
        phoneCountryCode:
          type: string
        phoneCountryCodeValid:
          type: boolean
        phoneCountryCodeValidationState:
          type: string
          enum:
          - VALID
          - REQUIRED_VALID
          - REQUIRED_INVALID
          - INVALID
          - DISABLED
        phoneNumber:
          type: string
        phoneNumberCleaned:
          type: string
        phoneNumberFormatted:
          type: string
        phoneNumberValid:
          type: boolean
        phoneNumberValidationState:
          type: string
          enum:
          - VALID
          - REQUIRED_VALID
          - REQUIRED_INVALID
          - INVALID
          - DISABLED
        prefixDisplay:
          type: string
        prefixType:
          type: string
          enum:
          - MR
          - MRS
          - AFG
          - ATG
        prefixValid:
          type: boolean
        prefixValidationState:
          type: string
          enum:
          - VALID
          - REQUIRED_VALID
          - REQUIRED_INVALID
          - INVALID
          - DISABLED
        relationship:
          type: string
        relationshipValid:
          type: boolean
        relationshipValidationState:
          type: string
          enum:
          - VALID
          - REQUIRED_VALID
          - REQUIRED_INVALID
          - INVALID
          - DISABLED
        suffixDisplay:
          type: string
        suffixType:
          type: string
          enum:
          - JR
          - SR
          - I
          - II
          - III
          - IV
          - V
        suffixValid:
          type: boolean
        suffixValidationState:
          type: string
          enum:
          - VALID
          - REQUIRED_VALID
          - REQUIRED_INVALID
          - INVALID
          - DISABLED
        valid:
          type: boolean
    TrustedContactResponse:
      title: TrustedContactResponse
      type: object
      properties:
        message:
          type: string
        status:
          type: string
        trustedContacts:
          type: array
          items:
            $ref: '#/components/schemas/TrustedContactRest'
    TrustedContactRest:
      title: TrustedContactRest
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        id:
          type: integer
          format: int32
        lastName:
          type: string
        phoneCountryCode:
          type: string
        phoneNumber:
          type: string
        phoneNumberCleaned:
          type: string
        phoneNumberFormatted:
          type: string
        prefixDisplay:
          type: string
        prefixType:
          type: string
          enum:
          - MR
          - MRS
          - AFG
          - ATG
        relationship:
          type: string
        suffixDisplay:
          type: string
        suffixType:
          type: string
          enum:
          - JR
          - SR
          - I
          - II
          - III
          - IV
          - V
    YearAmountDigestRest:
      title: YearAmountDigestRest
      type: object
      properties:
        amount:
          type: number
        year:
          type: integer
          format: int32
    ZipTab:
      title: ZipTab
      type: object
      properties:
        anchorIgnoreIfNotPresent:
          type: string
        anchorString:
          type: string
        anchorUnits:
          type: string
        anchorXOffset:
          type: string
        anchorYOffset:
          type: string
        bold:
          type: string
        concealValueOnDocument:
          type: string
        conditionalParentLabel:
          type: string
        conditionalParentValue:
          type: string
        disableAutoSize:
          type: string
        documentId:
          type: string
        font:
          type: string
        fontColor:
          type: string
        fontSize:
          type: string
        italic:
          type: string
        locked:
          type: string
        maxLength:
          type: integer
          format: int32
        mergeFieldXml:
          type: string
        name:
          type: string
        pageNumber:
          type: string
        recipientId:
          type: string
        requireInitialOnSharedChange:
          type: string
        required:
          type: string
        senderRequired:
          type: string
        shared:
          type: string
        tabId:
          type: string
        tabLabel:
          type: string
        underline:
          type: string
        useDash4:
          type: string
        validationMessage:
          type: string
        validationPattern:
          type: string
        value:
          type: string
        width:
          type: integer
          format: int32
        xPosition:
          type: string
        yPosition:
          type: string
  securitySchemes:
    basic:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
